{"version":3,"file":"static/js/272.effb9292.chunk.js","mappings":"wMAEaA,EAAQC,EAAAA,EAAAA,GAAH,+XACP,qBAAGC,MAAkBC,OAAOC,cAA5B,IACI,qBAAGF,MAAkBG,UAAU,GAA/B,IACE,qBAAGH,MAAkBI,YAAYC,QAAjC,IACA,qBAAGL,MAAkBM,YAAY,EAAjC,IAKA,qBAAGN,MAAkBG,UAAU,GAA/B,IAKA,qBAAGH,MAAkBG,UAAU,GAA/B,IAKJI,EAAiBR,EAAAA,EAAAA,IAAH,qYASX,qBAAGC,MAAkBC,OAAOO,WAA5B,IAcHC,GAAkBV,EAAAA,EAAAA,GAAOQ,EAAPR,CAAH,gOAefW,EAASX,EAAAA,EAAAA,IAAH,gaASH,qBAAGC,MAAkBC,OAAOC,cAA5B,IAgBHS,EAAUZ,EAAAA,EAAAA,QAAH,2N,SCjEpB,EAXkB,SAAC,GAAe,IAAba,EAAY,EAAZA,MACnB,OACE,UAACD,EAAD,YACE,SAACb,EAAD,UAAQc,KACR,SAACL,EAAD,KACA,SAACE,EAAD,KACA,SAACC,EAAD,MAGL,C,4UCfYG,EAAiBd,EAAAA,EAAAA,IAAH,gKASde,EAAOf,EAAAA,EAAAA,EAAH,gSAEN,qBAAEC,MAAiBC,OAAOc,eAA1B,I,SCaX,EAnBuB,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACrB,OACE,UAACH,EAAD,YACE,gCACE,mBACEI,OAAM,UAAKC,EAAL,gBAA2BC,EAA3B,OACNC,MAAM,wBAER,mBACEH,OAAM,UAAKI,EAAL,gBAA2BC,EAA3B,OACNF,MAAM,wBAER,gBAAKG,IAAKF,EAAgBG,IAAI,kBAEhC,SAACV,EAAD,UAAOE,MAGd,C,yJCtBYS,EAAQ1B,EAAAA,EAAAA,MAAH,ktBAKI,qBAAGC,MAAkBC,OAAOyB,kBAA5B,IAEV,qBAAG1B,MAAkB2B,QAAQC,iBAA7B,IACD,qBAAE5B,MAAkBC,OAAO4B,gBAA3B,IAIS,qBAAE7B,MAAkB8B,WAAWC,kBAA/B,IAAqD,qBAAE/B,MAAkB8B,WAAWE,cAA/B,IAK3D,qBAAGhC,MAAkB2B,QAAQM,sBAA7B,IAsBDC,EAAenC,EAAAA,EAAAA,IAAH,yEAKZoC,EAAgBpC,EAAAA,EAAAA,IAAH,uE,2DCoH1B,EA/ImB,WACjB,OAAsCqC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAiBC,EAAAA,EAAAA,IAAYC,EAAAA,IAC7BC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,GAAIP,EAASQ,OAAiC,UAAxBR,EAASQ,MAAMC,KAAkB,CACrD,IAAMC,EAAQd,EAAae,IAAI,KAC/BjB,EAAegB,EAChB,CAEF,GAAE,IAEH,IAAME,GAAoBC,EAAAA,EAAAA,cAAY,WAKpC,GAJ0B,YAAtBb,EAASc,UAA0C,KAAhBrB,GACrCI,EAAgB,CAAC,GAGO,YAAtBG,EAASc,UAA0C,KAAhBrB,EACrC,OAAQS,GACN,IAAK,QACHL,EAAgB,CAAEkB,EAAGtB,IACrB,MACF,IAAK,aACHI,EAAgB,CAAEmB,IAAKvB,IAM9B,GAAE,CAACO,EAASc,SAAUrB,EAAaS,EAAgBL,KAEpDU,EAAAA,EAAAA,YAAU,WACRK,GACD,GAAE,CAACA,IAsDJ,OACE,0BACE,iBAAMK,SAjDW,SAAAC,GAGnB,GAFAA,EAAEC,iBAEwB,UAAtBnB,EAASc,UAAwC,KAAhBrB,EAKnC,OAJAY,GAASe,EAAAA,EAAAA,GAAa,eACtBtB,EAAS,aAAD,OAAcL,GAAe,CACnCe,MAAO,CAAEC,KAAM,WAKnB,IAAMY,EAASC,OAAOC,YAAY3B,EAAa4B,WACvCT,EAAWM,EAAXN,EAAGC,EAAQK,EAARL,IAELhD,EAAQ4B,EAAae,IAAI,KACzBc,EAAa7B,EAAae,IAAI,OAEpC,GAAoB,KAAhBlB,EAGF,OAFAI,EAAgB,CAAC,QACjB6B,EAAAA,EAAAA,GAAiB,qBAIfX,GAAW,KAANA,IACPV,GAASsB,EAAAA,EAAAA,OACTtB,GAASuB,EAAAA,EAAAA,GAAkB5D,IAAQ6D,MAAK,SAAAC,GAAW,IAAD,IAEtB,MAAxBA,EAAOC,QAAQC,MACyB,KAAxC,UAAAF,EAAOC,QAAQE,YAAf,mBAAqBC,cAArB,eAA6BC,UAE7BT,EAAAA,EAAAA,GAAiB,eAAD,OAAgB1D,EAAhB,mBAEnB,KAECgD,GAAe,KAARA,IACTX,GAAS+B,EAAAA,EAAAA,OACT/B,GAASgC,EAAAA,EAAAA,GAAuBZ,IAAaI,MAAK,SAAAC,GAAW,IAAD,IAEhC,MAAxBA,EAAOC,QAAQC,MACyB,KAAxC,UAAAF,EAAOC,QAAQE,YAAf,mBAAqBC,cAArB,eAA6BC,UAE7BT,EAAAA,EAAAA,GAAiB,eAAD,OAAgBD,EAAhB,mBAEnB,IAEJ,EAIG,UACE,UAACnC,EAAD,YACE,SAACT,EAAD,CACEyD,KAAK,OACLC,KAAK,SACLC,MAAO/C,EACPgD,SA5DgB,SAAAvB,GACxB,IAAMwB,EAAYxB,EAAEyB,OAAOH,MAAMI,OACjClD,EAAegD,EAChB,EA0DSG,YAAY,iBACZC,aAAa,SAEf,SAACvD,EAAD,WACE,SAACwD,EAAA,EAAD,CACEC,WAAW,SACXC,SAAS,OACTC,QAAS,CACPC,WAAY,SACZC,cAAe,SACfC,YAAa,OACbC,aAAc,QAEhBC,cAAe,CACbC,KAAM,IACNC,KAAM,KACNC,KAAM,MAERC,eAAgB,CACdH,KAAM,IACNC,KAAM,KACNC,KAAM,MAERE,QACwB,MAAtB5D,EAASc,SACL,iCACA,UAEN+C,YAAa,CAAEC,WAAY,oBAC3BC,YAAa,CACXC,WACwB,MAAtBhE,EAASc,SACL,UACA,4CAQrB,C,iJC9JY/C,EAAUZ,EAAAA,EAAAA,QAAH,uS,SCWpB,EATkB,WAChB,OACE,UAACY,EAAD,YACE,SAACkG,EAAA,EAAD,KACA,SAACC,EAAA,EAAD,MAGL,E,yFCTYC,EAAmBhH,EAAAA,EAAAA,IAAH,ySAKb,qBAAGC,MAAkBC,OAAO+G,gBAA5B,IASHC,EAAclH,EAAAA,EAAAA,OAAH,kTAkBXmH,EAAOnH,EAAAA,EAAAA,IAAH,2NAeJoH,EAAepH,EAAAA,EAAAA,OAAH,8UAUd,qBAAGC,MAAkBC,OAAOmH,0BAA5B,IAGW,gBAAGC,EAAH,EAAGA,SAAUrH,EAAb,EAAaA,MAAb,OAClBqH,EAAWrH,EAAMC,OAAOqH,uBAAyB,aAD/B,IAGE,qBAAGtH,MAAkBC,OAAOqH,sBAA5B,I,UC+DxB,EAvHkB,SAAC,GAAuD,IAArDzC,EAAoD,EAApDA,KAAM0C,EAA8C,EAA9CA,aAAcC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACpD,GAAkDrF,EAAAA,EAAAA,UAAS,IAA3D,eAAOsF,EAAP,KAA0BC,EAA1B,KACMC,EAAYC,KAAKC,KAAKjD,EAAKE,OAASwC,GAEpCQ,GAA0BtE,EAAAA,EAAAA,cAAY,WAC1C,IAAMuE,EAAcC,OAAOC,WAEzBP,EADEK,GAAe,IACI,EAEA,GAExB,GAAE,KAEH7E,EAAAA,EAAAA,YAAU,WAER,OADA8E,OAAOE,iBAAiB,SAAUJ,GAC3B,WACLE,OAAOG,oBAAoB,SAAUL,EACtC,CACF,GAAE,CAACA,IAEJ,IAAMM,GAAmB5E,EAAAA,EAAAA,cACvB,SAAA6E,GACMA,GAAc,GAAKA,GAAcV,GACnCH,EAAaa,EAEhB,GACD,CAACb,EAAcG,KAGjBzE,EAAAA,EAAAA,YAAU,WACJqE,EAAcI,GAChBH,EAAa,EAEhB,GAAE,CAACD,EAAaI,EAAWH,IA+D5B,OACE,UAACV,EAAD,YACE,SAACE,EAAD,CACEsB,QAAS,kBAAMF,EAAiBb,EAAc,EAArC,EACTgB,SAA0B,IAAhBhB,EAFZ,UAIE,SAACN,EAAD,CAAMsB,SAA0B,IAAhBhB,EAAhB,UACE,gBAAKiB,KAAI,UAAKC,EAAAA,EAAL,qBApEa,WAC5B,IAEIC,EACAC,EAHEC,EAAkB,GAKxB,GAAIjB,GAAaF,EACfiB,EAAY,EACZC,EAAUhB,MACL,CACL,IAAMkB,EAAsBjB,KAAKkB,OAAOrB,EAAoB,GAAK,IAEjEkB,GADAD,EAAYd,KAAKmB,IAAIxB,EAAcsB,EAAqB,IAClCpB,EAAoB,GAE5BE,IAEZe,GADAC,EAAUhB,GACYF,EAAoB,EAE7C,CAEGiB,EAAY,GACdE,EAAgBI,MACd,SAAC9B,EAAD,CAAkCqB,UAAQ,EAA1C,SAA2C,OAAzB,kBAMtB,IA5BkC,eA4BzBU,GACPL,EAAgBI,MACd,SAAC9B,EAAD,CAEEoB,QAAS,kBAAMF,EAAiBa,EAAvB,EACT7B,SAAUG,IAAgB0B,EAH5B,SAKGA,GAJIA,GA/BuB,EA4BzBA,EAAIP,EAAWO,EAAIN,EAASM,IAAM,EAAlCA,GA8BT,OAlBIN,EAAUhB,GACZiB,EAAgBI,MACd,SAAC9B,EAAD,CAAmCqB,UAAQ,EAA3C,SAA4C,OAA1B,mBAMtBK,EAAgBI,MACd,SAAC9B,EAAD,CAEEoB,QAAS,kBAAMF,EAAiBT,EAAvB,EACTP,SAAUG,IAAgBI,EAH5B,SAKGA,GAJIA,IAQFiB,CACR,CAYIM,IACD,SAAClC,EAAD,CACEsB,QAAS,kBAAMF,EAAiBb,EAAc,EAArC,EACTgB,SAAUhB,IAAgBI,EAF5B,UAIE,SAACV,EAAD,CAAMsB,SAAUhB,IAAgBI,EAAhC,UACE,gBAAKa,KAAI,UAAKC,EAAAA,EAAL,wBAKlB,E,8BC5HY/H,EAAUZ,EAAAA,EAAAA,QAAH,8QAgBPqJ,EAAOrJ,EAAAA,EAAAA,GAAH,ycCyHjB,EA/G4B,WAAO,IAAD,EAC1BsJ,GAAetG,EAAAA,EAAAA,IAAYuG,EAAAA,IAC3BC,GAAoBxG,EAAAA,EAAAA,IAAYyG,EAAAA,IAChCC,GAAY1G,EAAAA,EAAAA,IAAY2G,EAAAA,IACxBC,GAAQ5G,EAAAA,EAAAA,IAAY6G,EAAAA,IAE1B,GAAsCxH,EAAAA,EAAAA,UAAS6F,OAAOC,YAAtD,eAAO2B,EAAP,KAAoBC,EAApB,KACA,GAA4C1H,EAAAA,EAAAA,UAAS,IAArD,eAAO2H,EAAP,KAAuBC,EAAvB,KAEA,GAAuBzH,EAAAA,EAAAA,MAAhBC,GAAP,eACMI,GAAWC,EAAAA,EAAAA,MACXI,GAAWC,EAAAA,EAAAA,MAEX+G,GAAUC,EAAAA,EAAAA,QAAO,MACvB,GAAsC9H,EAAAA,EAAAA,UAAS,GAA/C,eAAOoF,EAAP,KAAoB2C,EAApB,MAGAhH,EAAAA,EAAAA,YAAU,WACJwG,IAAOS,EAAAA,EAAAA,GAAeT,EAC3B,GAAE,CAACA,KAEJxG,EAAAA,EAAAA,YAAU,WACR,GAAIP,EAASQ,OAAiC,UAAxBR,EAASQ,MAAMC,KAAkB,CACrD,IACQM,EADOO,OAAOC,YAAY3B,EAAa4B,WACvCT,EACF/C,EAAQ4B,EAAae,IAAI,KAE3BI,GAAW,KAANA,IACPV,GAASsB,EAAAA,EAAAA,OACTtB,GAASuB,EAAAA,EAAAA,GAAkB5D,IAE9B,CAEF,GAAE,KAEHyJ,EAAAA,EAAAA,kBAAgB,WACd,IAAMC,EAAe,WACnBR,EAAe7B,OAAOC,WACvB,EAED,OADAD,OAAOE,iBAAiB,SAAUmC,GAC3B,WACLrC,OAAOG,oBAAoB,SAAUkC,EACtC,CACF,GAAE,IAEH,IAAMC,GAAoB9G,EAAAA,EAAAA,cAAY,WACpC,IAAI+G,GACU,OAAZnB,QAAY,IAAZA,OAAA,EAAAA,EAActE,QAAS,EAAIsE,EAA3B,OAA0CE,QAA1C,IAA0CA,OAA1C,EAA0CA,EAAmBkB,KAAI,SAAAvB,GAAC,OAAIA,CAAJ,IACpEc,EAAkBQ,EACnB,GAAE,CAACnB,EAAcE,KAElBpG,EAAAA,EAAAA,YAAU,WACRoH,GACD,GAAE,CAACA,IAEJ,IAAMlC,GAAmB5E,EAAAA,EAAAA,cACvB,SAAA6E,GAAe,IAAD,EACZ6B,EAAe7B,GACf,UAAA2B,EAAQS,eAAR,SAAiBC,eAAe,CAAEC,SAAU,UAC7C,GACD,CAACT,IAGGU,EAAkBd,EAAee,MAhDlB,GAiDlBtD,EAAc,GAjDI,EAkDnBA,GAGF,OACE,SAAC,EAAD,UACGiC,GACC,SAACsB,EAAA,EAAD,KAEA,gCACG,QAAC,EAAAlB,GAAe,KAAOE,EAAiBc,SAAxC,SAA0D9F,QAEzD,SAACqE,EAAD,CAAM4B,IAAKf,EAAX,UACIJ,GAAe,KAAOE,EAAiBc,GACtCC,MACC,EACAjB,GAAe,KACX,IACCA,GAAe,KAAOE,EAAiBc,GACrC9F,QAER0F,KAAI,gBAAQQ,EAAR,EAAGC,IAAStK,EAAZ,EAAYA,MAAOuK,EAAnB,EAAmBA,QAAnB,OACH,SAACC,EAAA,EAAD,CAEEH,GAAIA,EACJrK,MAAOA,EACPW,IAAK4J,GAHAF,EAFJ,OAUT,SAAC,IAAD,UAAgB,sCAEjBpB,EAAc,MAAkC,IAA1BE,EAAehF,SACpC,SAAC,EAAD,CACEF,KAAMkF,EACNxC,aArFS,EAsFTC,YAAaA,EACbC,aAAcY,QAO3B,EC1HD,EAVmB,SAAAzH,GACjB,OACE,UAACyK,EAAA,EAAD,YACE,SAAC,IAAD,CAAWzK,MAAM,YACjB,SAAC,EAAD,KACA,SAAC,EAAD,MAGL,C","sources":["components/ReusableComponents/PageTitle/PageTitle.styled.jsx","components/ReusableComponents/PageTitle/PageTitle.jsx","components/ReusableComponents/SearchCap/SearchCap.styled.jsx","components/ReusableComponents/SearchCap/SearhCap.jsx","components/ReusableComponents/SearchForm/SearchForm.styled.jsx","components/ReusableComponents/SearchForm/SearchForm.jsx","components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","components/Paginator/PaginatorSearch.styled.jsx","components/Paginator/PaginatorSearch.jsx","components/SearchedRecipesList/SearchRecipesList.styled.jsx","components/SearchedRecipesList/SearchedRecipesList.jsx","pages/SearchPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Title = styled.h1`\n  color: ${({ theme }) => theme.colors.pageTitleColor};\n  font-size: ${({ theme }) => theme.fontSizes[28]}px;\n  font-weight: ${({ theme }) => theme.fontWeights.semibold};\n  line-height: ${({ theme }) => theme.lineHeights['1']};\n  letter-spacing: -0.56px;\n  padding-bottom: 3px;\n\n  @media screen and (min-width: 768px) {\n    font-size: ${({ theme }) => theme.fontSizes[32]}px;\n    letter-spacing: -0.64px;\n    padding-bottom: 6px;\n  }\n  @media screen and (min-width: 1280px) {\n    font-size: ${({ theme }) => theme.fontSizes[44]}px;\n    letter-spacing: -0.88px;\n  }\n`;\n\nexport const RectangleFirst = styled.div`\n  position: absolute;\n  top: 76px;\n  left: 104px;\n  width: 8px;\n  height: 8px;\n  transform: rotate(-25deg);\n  flex-shrink: 0;\n  border-radius: 3px;\n  background: ${({ theme }) => theme.colors.accentColor};\n\n  @media screen and (min-width: 768px) {\n    left: 187px;\n    width: 14px;\n    height: 14px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    top: 116px;\n    left: 228px;\n  }\n`;\n\nexport const RectangleSecond = styled(RectangleFirst)`\n  top: 106px;\n  left: 333px;\n\n  @media screen and (min-width: 768px) {\n    top: 89px;\n    left: 694px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    top: 129px;\n    left: 1149px;\n  }\n`;\n\nexport const Circle = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 241px;\n  width: 6px;\n  height: 6px;\n  transform: rotate(-25deg);\n  flex-shrink: 0;\n  border-radius: 3px;\n  background: ${({ theme }) => theme.colors.pageTitleColor};\n\n  @media screen and (min-width: 768px) {\n    width: 12px;\n    height: 12px;\n    border-radius: 3px;\n\n    left: 405px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    top: 200px;\n    left: 706px;\n  }\n`;\n\nexport const Section = styled.section`\n  position: relative;\n  padding-top: 114px;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 136px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding-top: 164px;\n  }\n`;\n","import {\n  Section,\n  Title,\n  RectangleFirst,\n  RectangleSecond,\n  Circle,\n} from './PageTitle.styled';\n\nconst PageTitle = ({ title }) => {\n  return (\n    <Section>\n      <Title>{title}</Title>\n      <RectangleFirst />\n      <RectangleSecond />\n      <Circle />\n    </Section>\n  );\n};\n\nexport default PageTitle;\n","import styled from '@emotion/styled';\n\nexport const ImageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: 0 auto;\n  max-width: 100%;\n`;\n\nexport const Text = styled.p`\n  margin-top: 24px;\n  color: ${({theme}) => theme.colors.selectTextColor}\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1;\n  letter-spacing: -0.28px;\n  opacity: 0.5;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 32px;\n    font-size: 24px;\n    letter-spacing: -0.48px;\n  }\n`;\n","import searchCapSmall from '../../../images/searchPageCap/searchCapSmall.png';\nimport searchCapSmall2x from '../../../images/searchPageCap/searchCapSmall@2x.png';\nimport searchCapLarge from '../../../images/searchPageCap/searchCapLarge.png';\nimport searchCapLarge2x from '../../../images/searchPageCap/searchCapLarge@2x.png';\n\nimport { ImageContainer, Text } from './SearchCap.styled';\n\nconst SearchCapImage = ({children}) => {\n    return (\n      <ImageContainer>\n        <picture>\n          <source\n            srcSet={`${searchCapLarge} 1x, ${searchCapLarge2x} 2x`}\n            media=\"(min-width: 768px)\"\n          />\n          <source\n            srcSet={`${searchCapSmall} 1x, ${searchCapSmall2x} 2x`}\n            media=\"(max-width: 767px)\"\n          />\n          <img src={searchCapSmall} alt=\"vegitable\" />\n        </picture>\n        <Text>{children}</Text>\n      </ImageContainer>\n    );\n};\n\nexport default SearchCapImage;\n\n\n","import styled from '@emotion/styled';\n\nexport const Input = styled.input`\n  box-sizing: border-box;\n  width: 295px;\n  padding: 16px 32px;\n  drop-shadow: 0px 4px 97px rgba(34, 37, 42, 0.03);\n  background-color: ${({ theme }) => theme.colors.inputSearchBGColor};\n  border-radius: 24px 44px;\n  border: ${({ theme }) => theme.borders.inputSearchBorder};\n  color: ${({theme }) => theme.colors.primaryTextColor};\n  font-size: 12px;\n  line-height: 1.2;\n\n  transition: all ${({theme }) => theme.transforms.transitionDuration} ${({theme }) => theme.transforms.timingFunction};\n\n  :hover,\n  :focus,\n  :active {\n    border: ${({ theme }) => theme.borders.inputSearchBorderHover};\n    outline: rgba(35, 38, 42, 0.2);\n  }\n\n  ::placeholder {\n    color: #bdbdbd;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 362px;\n    padding: 17px 38px;\n    font-size: 14px;\n    line-height: 1.2;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 510px;\n    padding: 23px 48px;\n    font-size: 16px;\n    line-height: 1.2;\n  }\n`;\nexport const InputWrapper = styled.div`\n  display: inline-block;\n  position: relative;\n`;\n\nexport const ButtonWrapper = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n`;\n","import { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useSearchParams, useNavigate, useLocation } from 'react-router-dom';\n\nimport MainButton from '../MainButton/MainButton';\nimport { showMessageToast } from '../ToastCustom/showToast';\n\nimport { Input, InputWrapper, ButtonWrapper } from './SearchForm.styled';\n\nimport { selectSearchFilter } from 'redux/search/searchSelector';\nimport getRecipesByTitle from 'redux/search/operations/getRecipesByTitle';\nimport getRecipesByIngredient from 'redux/search/operations/getRecipesByIngredient';\nimport {\n  resetRecipeByTitle,\n  resetRecipeByIngredient,\n} from 'redux/search/searchSlice';\nimport { selectOption } from 'components/SearchTypeSelector/SearchTypeSelector';\n\n\nconst SearchForm = () => {\n  const [searchValue, setSearchValue] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const selectedOption = useSelector(selectSearchFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (location.state && location.state.from === '/main') {\n      const query = searchParams.get('q');\n      setSearchValue(query);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const updateQueryString = useCallback(() => {\n    if (location.pathname === '/search' && searchValue === '') {\n      setSearchParams({});\n    }\n\n    if (location.pathname === '/search' && searchValue !== '') {\n      switch (selectedOption) {\n        case 'Title':\n          setSearchParams({ q: searchValue });\n          break;\n        case 'Ingredient':\n          setSearchParams({ ing: searchValue });\n          break;\n        default:\n          break;\n      }\n    }\n  }, [location.pathname, searchValue, selectedOption, setSearchParams]);\n\n  useEffect(() => {\n    updateQueryString();\n  }, [updateQueryString]);\n\n  const handleInputChange = e => {\n    const trimvalue = e.target.value.trim();\n    setSearchValue(trimvalue);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (location.pathname === '/main' && searchValue !== '') {\n      dispatch(selectOption('Title'));\n      navigate(`/search?q=${searchValue}`, {\n        state: { from: '/main' },\n      });\n      return;\n    }\n\n    const params = Object.fromEntries(searchParams.entries());\n    const { q, ing } = params;\n\n    const title = searchParams.get('q');\n    const ingredient = searchParams.get('ing');\n\n    if (searchValue === '') {\n      setSearchParams({});\n      showMessageToast('Enter any word in');\n      return;\n    }\n\n    if (q && q !== '') {\n      dispatch(resetRecipeByIngredient());\n      dispatch(getRecipesByTitle(title)).then(result => {\n        if (\n          result.payload.code === 200 &&\n          result.payload.data?.recipe?.length === 0\n        ) {\n          showMessageToast(`On request \"${title}\" found nothing`);\n        }\n      });\n    }\n    if (ing && ing !== '') {\n      dispatch(resetRecipeByTitle());\n      dispatch(getRecipesByIngredient(ingredient)).then(result => {\n        if (\n          result.payload.code === 200 &&\n          result.payload.data?.recipe?.length === 0\n        ) {\n          showMessageToast(`On request \"${ingredient}\" found nothing`);\n        }\n      });\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <InputWrapper>\n          <Input\n            type=\"text\"\n            name=\"search\"\n            value={searchValue}\n            onChange={handleInputChange}\n            placeholder=\"Enter the text\"\n            autoComplete=\"off\"\n          />\n          <ButtonWrapper>\n            <MainButton\n              nameButton=\"Search\"\n              fontSize=\"14px\"\n              padding={{\n                paddingTop: '13.3px',\n                paddingBottom: '13.3px',\n                paddingLeft: '32px',\n                paddingRight: '32px',\n              }}\n              cofByMedia768={{\n                font: 1.2,\n                padX: 1.02,\n                padY: 1.63,\n              }}\n              cofByMedia1280={{\n                font: 1.2,\n                padX: 1.54,\n                padY: 1.63,\n              }}\n              bgColor={\n                location.pathname === '/'\n                  ? 'var(--background-color-circle)'\n                  : '#8BAA36'\n              }\n              hoverStyles={{ styleFirst: 'background-color' }}\n              hoverParams={{\n                paramFirst:\n                  location.pathname === '/'\n                    ? '#8BAA36'\n                    : 'var(--background-color-circle)',\n              }}\n            />\n          </ButtonWrapper>\n        </InputWrapper>\n      </form>\n    </div>\n  );\n};\n\nexport default SearchForm;\n","import styled from '@emotion/styled';\n\nexport const Section = styled.section`\n  text-align: center;\n  padding-top: 50px;\n  padding-bottom: 22px;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 40px;\n    padding-bottom: 20px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding-top: 50px;\n    padding-bottom: 45px;\n  }\n`;\n","import SearchForm from 'components/ReusableComponents/SearchForm/SearchForm';\nimport SearchTypeSelector from 'components/SearchTypeSelector/SearchTypeSelector';\nimport { Section } from './SearchBar.styled';\n\nconst SearchBar = () => {\n  return (\n    <Section>\n      <SearchForm />\n      <SearchTypeSelector />\n    </Section>\n  );\n};\n\nexport default SearchBar;\n","import styled from '@emotion/styled';\n\nexport const PaginationStyled = styled.div`\n  display: inline-flex;\n  justify-content: center;\n  align-iems: center;\n  border-radius: 26px;\n  background: ${({ theme }) => theme.colors.paginatorBGColor};\n  box-shadow: 0px 4px 4px 0px rgba(135, 135, 135, 0.2);\n  padding: 12px 20px;\n\n  @madia and screen(min-width: 768px) {\n    padding: 14px 20px;\n  }\n`;\n\nexport const ArrowButton = styled.button`\n  width: 27px;\n  height: 27px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 5px 10px;\n  margin: 0 5px;\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n\nexport const Icon = styled.svg`\n  width: 8px;\n  height: 15px;\n  fill: rgba(169, 169, 169, 0.8);\n  \n  &:disabled {\n    fill: rgba(169, 169, 169, 0.3);\n    cursor: not-allowed;\n  }\n\n  &:hover {\n    fill: #656565;\n  }\n`;\n\nexport const NumberButton = styled.button`\n  width: 27px;\n  height: 27px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: none;\n  padding: 5px 10px;\n  margin: 0 5px;\n  font-size: 14px;\n  color: ${({ theme }) => theme.colors.recipeCardDescriptionColor};\n  cursor: pointer;\n  border-radius: 50%;\n  background-color: ${({ selected, theme }) =>\n    selected ? theme.colors.paginationBgHoverColor : 'transparent'};\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.paginationBgHoverColor};\n  }\n`;\n","import { useCallback, useEffect, useState } from 'react';\nimport {\n  PaginationStyled,\n  NumberButton,\n  Icon,\n  ArrowButton,\n} from './PaginatorSearch.styled';\nimport sprite from '../../images/sprite.svg';\n\nconst Paginator = ({ data, itemsPerPage, currentPage, onPageChange }) => {\n  const [visiblePagesCount, setVisiblePagesCount] = useState(10);\n  const pageCount = Math.ceil(data.length / itemsPerPage);\n\n  const updateVisiblePagesCount = useCallback(() => {\n    const screenWidth = window.innerWidth;\n    if (screenWidth <= 767) {\n      setVisiblePagesCount(6);\n    } else {\n      setVisiblePagesCount(10);\n    }\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener('resize', updateVisiblePagesCount);\n    return () => {\n      window.removeEventListener('resize', updateVisiblePagesCount);\n    };\n  }, [updateVisiblePagesCount]);\n\n  const handlePageChange = useCallback(\n    pageNumber => {\n      if (pageNumber >= 1 && pageNumber <= pageCount) {\n        onPageChange(pageNumber);\n      }\n    },\n    [onPageChange, pageCount]\n  );\n\n  useEffect(() => {\n    if (currentPage > pageCount) {\n      onPageChange(1);\n    }\n  }, [currentPage, pageCount, onPageChange]);\n\n  const renderPaginationItems = () => {\n    const paginationItems = [];\n\n    let startPage;\n    let endPage;\n\n    if (pageCount <= visiblePagesCount) {\n      startPage = 1;\n      endPage = pageCount;\n    } else {\n      const pagesBeforeAndAfter = Math.floor((visiblePagesCount - 2) / 2);\n      startPage = Math.max(currentPage - pagesBeforeAndAfter, 1);\n      endPage = startPage + visiblePagesCount - 3;\n\n      if (endPage > pageCount) {\n        endPage = pageCount;\n        startPage = endPage - visiblePagesCount + 3;\n      }\n    }\n\n    if (startPage > 1) {\n      paginationItems.push(\n        <NumberButton key=\"ellipsis-left\" disabled>\n          ...\n        </NumberButton>\n      );\n    }\n\n    for (let i = startPage; i < endPage; i++) {\n      paginationItems.push(\n        <NumberButton\n          key={i}\n          onClick={() => handlePageChange(i)}\n          selected={currentPage === i}\n        >\n          {i}\n        </NumberButton>\n      );\n    }\n\n    if (endPage < pageCount) {\n      paginationItems.push(\n        <NumberButton key=\"ellipsis-right\" disabled>\n          ...\n        </NumberButton>\n      );\n    }\n\n    paginationItems.push(\n      <NumberButton\n        key={pageCount}\n        onClick={() => handlePageChange(pageCount)}\n        selected={currentPage === pageCount}\n      >\n        {pageCount}\n      </NumberButton>\n    );\n\n    return paginationItems;\n  };\n\n  return (\n    <PaginationStyled>\n      <ArrowButton\n        onClick={() => handlePageChange(currentPage - 1)}\n        disabled={currentPage === 1}\n      >\n        <Icon disabled={currentPage === 1}>\n          <use href={`${sprite}#arrow-left`}></use>\n        </Icon>\n      </ArrowButton>\n      {renderPaginationItems()}\n      <ArrowButton\n        onClick={() => handlePageChange(currentPage + 1)}\n        disabled={currentPage === pageCount}\n      >\n        <Icon disabled={currentPage === pageCount}>\n          <use href={`${sprite}#arrow-right`}></use>\n        </Icon>\n      </ArrowButton>\n    </PaginationStyled>\n  );\n};\n\nexport default Paginator;\n","import styled from '@emotion/styled';\n\nexport const Section = styled.section`\n  text-align: center;\n  padding-top: 22px;\n  padding-bottom: 100px;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 20px;\n    padding-bottom: 200px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding-top: 45px;\n  }\n`;\n\n\nexport const List = styled.ul`\n  align-items: center;\n  margin-bottom: 50px;\n  li {\n    margin-bottom: 24px;\n  }\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    flex-direction: column;\n    flex-direction: row;\n    flex-wrap: wrap;\n    gap: 32px;\n    li {\n      margin-bottom: 0;\n    }\n  }\n\n  @media screen and (min-width: 1280px) {\n    flex-direction: row;\n    flex-wrap: wrap;\n    row-gap: 100px;\n    column-gap: 14px;\n  }\n`;\n","import {\n  useEffect,\n  useLayoutEffect,\n  useState,\n  useCallback,\n  useRef,\n} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router';\nimport { useSearchParams } from 'react-router-dom';\n\nimport Loader from '../ReusableComponents/Loader/Loader';\nimport RecipeGalleryItem from '../ReusableComponents/RecipeGalleryItem/RecipeGalleryItem';\nimport SearchCapImage from '../ReusableComponents/SearchCap/SearhCap';\nimport { showErrorToast } from '../ReusableComponents/ToastCustom/showToast';\nimport Paginator from '../Paginator/PaginatorSearch';\n\nimport {\n  selectRecipeByTitle,\n  selectRecipesByIngredient,\n  selectIsLoading,\n  selectError,\n} from 'redux/search/searchSelector';\nimport getRecipesByTitle from 'redux/search/operations/getRecipesByTitle';\nimport { resetRecipeByIngredient } from 'redux/search/searchSlice';\n\nimport { Section, List } from './SearchRecipesList.styled';\n\nconst SearchedRecipesList = () => {\n  const searchedList = useSelector(selectRecipeByTitle);\n  const serchedIngredList = useSelector(selectRecipesByIngredient);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  const [visibleRecipes, setVisibleRecipes] = useState([]);\n\n  const [searchParams] = useSearchParams();\n  const location = useLocation();\n  const dispatch = useDispatch();\n\n  const listRef = useRef(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 6;\n\n  useEffect(() => {\n    if (error) showErrorToast(error);\n  }, [error]);\n\n  useEffect(() => {\n    if (location.state && location.state.from === '/main') {\n      const params = Object.fromEntries(searchParams.entries());\n      const { q } = params;\n      const title = searchParams.get('q');\n\n      if (q && q !== '') {\n        dispatch(resetRecipeByIngredient());\n        dispatch(getRecipesByTitle(title));\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useLayoutEffect(() => {\n    const handleResize = () => {\n      setWindowWidth(window.innerWidth);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  const visibleRecipeList = useCallback(() => {\n    let visibleList =\n      searchedList?.length > 0 ? searchedList : serchedIngredList?.map(i => i);\n    setVisibleRecipes(visibleList);\n  }, [searchedList, serchedIngredList]);\n\n  useEffect(() => {\n    visibleRecipeList();\n  }, [visibleRecipeList]);\n\n  const handlePageChange = useCallback(\n    pageNumber => {\n      setCurrentPage(pageNumber);\n      listRef.current?.scrollIntoView({ behavior: 'smooth' });\n    },\n    [setCurrentPage]\n  );\n\n  const currentPageData = visibleRecipes.slice(\n    (currentPage - 1) * itemsPerPage,\n    currentPage * itemsPerPage\n  );\n\n  return (\n    <Section>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <>\n          {(windowWidth >= 1280 ? visibleRecipes : currentPageData)?.length ||\n          0 ? (\n            <List ref={listRef}>\n              {(windowWidth >= 1280 ? visibleRecipes : currentPageData)\n                .slice(\n                  0,\n                  windowWidth >= 1280\n                    ? 12\n                    : (windowWidth >= 1280 ? visibleRecipes : currentPageData)\n                        .length\n                )\n                .map(({ _id: id, title, preview }) => (\n                  <RecipeGalleryItem\n                    key={id}\n                    id={id}\n                    title={title}\n                    src={preview}\n                  />\n                ))}\n            </List>\n          ) : (\n            <SearchCapImage>Try looking for something else...</SearchCapImage>\n          )}\n          {windowWidth < 1280 && visibleRecipes.length !== 0 && (\n            <Paginator\n              data={visibleRecipes}\n              itemsPerPage={itemsPerPage}\n              currentPage={currentPage}\n              onPageChange={handlePageChange}\n            />\n          )}\n        </>\n      )}\n    </Section>\n  );\n};\n\nexport default SearchedRecipesList;\n","import { MainContainer } from 'components/MainContainer/MainContainer';\nimport TitlePage from 'components/ReusableComponents/PageTitle/PageTitle';\nimport SearchBar from 'components/SearchBar/SearchBar';\nimport SearchedRecipesList from 'components/SearchedRecipesList/SearchedRecipesList';\n\nconst SearchPage = title => {\n  return (\n    <MainContainer>\n      <TitlePage title=\"Search\"></TitlePage>\n      <SearchBar />\n      <SearchedRecipesList />\n    </MainContainer>\n  );\n};\n\nexport default SearchPage;\n"],"names":["Title","styled","theme","colors","pageTitleColor","fontSizes","fontWeights","semibold","lineHeights","RectangleFirst","accentColor","RectangleSecond","Circle","Section","title","ImageContainer","Text","selectTextColor","children","srcSet","searchCapLarge","searchCapLarge2x","media","searchCapSmall","searchCapSmall2x","src","alt","Input","inputSearchBGColor","borders","inputSearchBorder","primaryTextColor","transforms","transitionDuration","timingFunction","inputSearchBorderHover","InputWrapper","ButtonWrapper","useState","searchValue","setSearchValue","useSearchParams","searchParams","setSearchParams","navigate","useNavigate","location","useLocation","selectedOption","useSelector","selectSearchFilter","dispatch","useDispatch","useEffect","state","from","query","get","updateQueryString","useCallback","pathname","q","ing","onSubmit","e","preventDefault","selectOption","params","Object","fromEntries","entries","ingredient","showMessageToast","resetRecipeByIngredient","getRecipesByTitle","then","result","payload","code","data","recipe","length","resetRecipeByTitle","getRecipesByIngredient","type","name","value","onChange","trimvalue","target","trim","placeholder","autoComplete","MainButton","nameButton","fontSize","padding","paddingTop","paddingBottom","paddingLeft","paddingRight","cofByMedia768","font","padX","padY","cofByMedia1280","bgColor","hoverStyles","styleFirst","hoverParams","paramFirst","SearchForm","SearchTypeSelector","PaginationStyled","paginatorBGColor","ArrowButton","Icon","NumberButton","recipeCardDescriptionColor","selected","paginationBgHoverColor","itemsPerPage","currentPage","onPageChange","visiblePagesCount","setVisiblePagesCount","pageCount","Math","ceil","updateVisiblePagesCount","screenWidth","window","innerWidth","addEventListener","removeEventListener","handlePageChange","pageNumber","onClick","disabled","href","sprite","startPage","endPage","paginationItems","pagesBeforeAndAfter","floor","max","push","i","renderPaginationItems","List","searchedList","selectRecipeByTitle","serchedIngredList","selectRecipesByIngredient","isLoading","selectIsLoading","error","selectError","windowWidth","setWindowWidth","visibleRecipes","setVisibleRecipes","listRef","useRef","setCurrentPage","showErrorToast","useLayoutEffect","handleResize","visibleRecipeList","visibleList","map","current","scrollIntoView","behavior","currentPageData","slice","Loader","ref","id","_id","preview","RecipeGalleryItem","MainContainer"],"sourceRoot":""}