{"version":3,"file":"static/js/111.85702b80.chunk.js","mappings":"uMAEaA,EAAQC,EAAAA,EAAAA,GAAH,odAsBLC,EAAiBD,EAAAA,EAAAA,IAAH,2SAiBdE,GAAkBF,EAAAA,EAAAA,GAAOC,EAAPD,CAAH,8MAcfG,EAASH,EAAAA,EAAAA,IAAH,4aAwBNI,EAAUJ,EAAAA,EAAAA,IAAH,+C,SCvDpB,EAfkB,SAAC,GAAe,IAAbK,EAAY,EAAZA,MACnB,OACE,UAACD,EAAD,YACE,SAACL,EAAD,UAAQM,KACR,SAACJ,EAAD,KACA,SAACC,EAAD,KACA,SAACC,EAAD,MAGL,C,gKChBKG,EAAaN,EAAAA,EAAAA,GAAH,qFAMVO,EAAWP,EAAAA,EAAAA,GAAH,6TAuBRQ,EAAWR,EAAAA,EAAAA,KAAH,mIAQRS,EAAOT,EAAAA,EAAAA,KAAH,6F,SCpCGU,EAAe,SAAC,GAAY,IAAXC,EAAU,EAAVA,KAC1B,GAA4CC,EAAAA,EAAAA,UAAS,MAArD,eAAOC,EAAP,KAAuBC,EAAvB,KAEA,OAAO,iCACH,SAACR,EAAD,UACKK,EAAKI,KAAI,SAAAC,GACN,OAAO,SAACT,EAAD,CAAUU,QAAS,kBAAMH,EAAkBE,EAAxB,EAA+BE,UAAWF,IAASH,EAAiB,SAAW,IAAlG,UACH,UAAC,KAAD,CAAMM,GAAE,sBAAiBH,GAAzB,UACKA,GACD,SAACR,EAAD,QAGX,OAEL,SAACC,EAAD,MAEP,E,mECjBYW,EAAYpB,EAAAA,EAAAA,QAAH,iQAMJqB,G,UCAZC,EAAU,CAAC,OAAQ,YAAa,UAAW,UAAW,OAAQ,OAAQ,gBAAiB,QAAS,OAAQ,UAAW,QA6BzH,EA3BuB,WACrB,OAA8CV,EAAAA,EAAAA,UAAS,QAAvD,eAAOW,EAAP,KAAwBC,EAAxB,KACQC,GAAiBC,EAAAA,EAAAA,MAAjBD,aACFE,GAAaC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,QAAQC,YAAlB,IACpCC,QAAQC,IAAIN,GACZ,IAAMO,GAAWC,EAAAA,EAAAA,MAYjB,OAVAC,EAAAA,EAAAA,YAAU,WACRZ,EAAmBC,EACpB,GAAE,CAACA,KAEJW,EAAAA,EAAAA,YAAU,WACVF,GAASG,EAAAA,EAAAA,KACR,GAAE,CAACH,IAEJF,QAAQC,IAAI,UAAWV,IAEhB,SAACH,EAAD,WACL,UAAC,IAAD,YACE,SAACkB,EAAA,EAAD,CAAWjC,MAAO,gBAClB,SAACK,EAAD,CAAcC,KAAMW,QAKzB,C","sources":["components/ReusableComponents/PageTitle/PageTitle.styled.jsx","components/ReusableComponents/PageTitle/PageTitle.jsx","components/CategoryList/CategoryList.styled.jsx","components/CategoryList/CategoryList.jsx","pages/CategoriesPage/CategoriesPage.styled.jsx","pages/CategoriesPage/CategoriesPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Title = styled.h1`\n  color: var(--page-title-color);\n  font-size: 28px;\n  font-weight: 600;\n  line-height: 1;\n  letter-spacing: -0.56px;\n  padding-top: 35px;\n  padding-bottom: 3px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 32px;\n    letter-spacing: -0.64px;\n    padding-bottom: 6px;\n    padding-top: 46px;\n  }\n  @media screen and (min-width: 1440px) {\n    font-size: 44px;\n    letter-spacing: -0.88px;\n    padding-top: 44px;\n  }\n`;\n\nexport const RectangleFirst = styled.div`\n  position: absolute;\n  top: 0;\n  left: 104px;\n  width: 8px;\n  height: 8px;\n  transform: rotate(-25deg);\n  flex-shrink: 0;\n  border-radius: 3px;\n  background: var(--accent-color);\n\n  @media screen and (min-width: 768px) {\n    width: 14px;\n    height: 14px;\n  }\n`;\n\nexport const RectangleSecond = styled(RectangleFirst)`\n  top: 30px;\n  left: 333px;\n\n  @media screen and (min-width: 768px) {\n    top: 13px;\n    left: 694px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    left: 1150px;\n  }\n`;\n\nexport const Circle = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 241px;\n  width: 6px;\n  height: 6px;\n  transform: rotate(-25deg);\n  flex-shrink: 0;\n  border-radius: 3px;\n  background: var(----backgraund-color-circle);\n\n  @media screen and (min-width: 768px) {\n    width: 12px;\n    height: 12px;\n    border-radius: 3px;\n\n    left: 405px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    left: 707px;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  position: relative;\n`;\n","import PropTypes from 'prop-types';\nimport {\n  Wrapper,\n  Title,\n  RectangleFirst,\n  RectangleSecond,\n  Circle,\n} from './PageTitle.styled';\n\nconst PageTitle = ({ title }) => {\n  return (\n    <Wrapper>\n      <Title>{title}</Title>\n      <RectangleFirst />\n      <RectangleSecond />\n      <Circle />\n    </Wrapper>\n  );\n};\n\nPageTitle.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default PageTitle;\n","import styled from \"@emotion/styled\";\n\nconst Categories = styled.ul`\ndisplay: flex;\nalign-items: center;\npadding-top: 100px;\n\n`\nconst Category = styled.li`\nposition: relative;\ncolor: #BDBDBD;\nfont-size: 18px;\nfont-weight: 400;\nline-height: 1;\npadding-bottom: 27px;\ntext-transform: capitalize;\n\n&:not(:last-child){\n    margin-right: 55px;\n\n}\n&:hover,\n&.active{\n    color: var(--accent-color);\n    & span{\n    height: 2px;\n}\n}\n\n}\n`\nconst ItemLine = styled.span`\nposition: absolute;\nbottom: 0;\nleft: 0;\ndisplay: block;\nwidth: 100%;\nbackground-color: currentColor;\n`\nconst Line = styled.span`\ndisplay: block;\nwidth: 1240px;\nheight: 1px;\nbackground: #E0E0E0;\n`\nexport{Categories, Category, Line, ItemLine}","import { useState } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { Categories, Category, Line, ItemLine } from \"./CategoryList.styled\"\nexport const CategoryList = ({list}) => {\n    const [activeCategory, setActiveCategory] = useState(null)\n\n    return <>\n        <Categories>\n            {list.map(item => {\n                return <Category onClick={() => setActiveCategory(item)} className={item === activeCategory ? 'active' : ' '}>\n                    <Link to={`/categories/${item}`}>\n                        {item}\n                        <ItemLine />\n                    </Link>\n                </Category>\n            })}\n        </Categories>\n        <Line/>\n    </>\n}","import styled from \"@emotion/styled\";\nimport bgImg from \"./images/bluered-bg.png\"\nexport const Container = styled.section`\ndisplay: block;\nwidth: 100%;\nmargin-top: 58px;\n// margin-top: 120px; // for header absolute\npadding-bottom: 800px;\nbackground: url(${bgImg}) no-repeat;\nbackground-position: left -200px bottom -520px;\nbackground-size: 917px 1041px;\n`","import { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport getCategoryList from \"redux/recipes/operations/getCategoryList\";\nimport { CategoryList } from \"components/CategoryList/CategoryList\";\nimport PageTitle from \"components/ReusableComponents/PageTitle/PageTitle\";\nimport { Container } from \"./CategoriesPage.styled\"; \nimport { MainEl } from \"components/Main/Main.styled\";\nconst categrs = ['beef', 'breakfast', 'chicken', 'dessert', 'goat', 'lamb', 'miscellaneous', 'pasta', 'pork', 'seafood', 'side']\n\nconst CategoriesPage = () => {\n  const [currentCategory, setCurrentCategory] = useState('beef')\n  const { categoryName } = useParams();\n  const categories = useSelector(state => state.recipes.categoryList)\n  console.log(categories);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setCurrentCategory(categoryName)\n  }, [categoryName])\n\n  useEffect(() => {\n\t\tdispatch(getCategoryList())\n  }, [dispatch])\n\n  console.log('current', currentCategory);\n\n  return <Container>\n    <MainEl>\n      <PageTitle title={'Categories'} />\n      <CategoryList list={categrs} />\n    </MainEl>\n    \n    \n  </Container>\n};\n\nexport default CategoriesPage;"],"names":["Title","styled","RectangleFirst","RectangleSecond","Circle","Wrapper","title","Categories","Category","ItemLine","Line","CategoryList","list","useState","activeCategory","setActiveCategory","map","item","onClick","className","to","Container","bgImg","categrs","currentCategory","setCurrentCategory","categoryName","useParams","categories","useSelector","state","recipes","categoryList","console","log","dispatch","useDispatch","useEffect","getCategoryList","PageTitle"],"sourceRoot":""}