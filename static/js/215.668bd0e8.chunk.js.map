{"version":3,"file":"static/js/215.668bd0e8.chunk.js","mappings":"wMAEaA,EAAQC,EAAAA,EAAAA,GAAH,odAsBLC,EAAiBD,EAAAA,EAAAA,IAAH,2SAiBdE,GAAkBF,EAAAA,EAAAA,GAAOC,EAAPD,CAAH,8MAcfG,EAASH,EAAAA,EAAAA,IAAH,0aAwBNI,EAAUJ,EAAAA,EAAAA,QAAH,0EAGE,qBAAEK,MAAiBC,OAAOC,eAA1B,I,SC1DtB,EAfkB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACnB,OACE,UAACJ,EAAD,YACE,SAACL,EAAD,UAAQS,KACR,SAACP,EAAD,KACA,SAACC,EAAD,KACA,SAACC,EAAD,MAGL,C,uKChBKM,EAAaT,EAAAA,EAAAA,GAAH,8RAeVU,EAAWV,EAAAA,EAAAA,GAAH,ifAEF,qBAAEK,MAAkBC,OAAOK,gBAA3B,IAMU,qBAAEN,MAAkBO,WAAWC,kBAA/B,IAAqD,qBAAER,MAAkBO,WAAWE,cAA/B,IAQ9D,qBAAET,MAAkBC,OAAOS,WAA3B,IAWK,qBAAEV,MAAkBC,OAAOS,WAA3B,IAIZC,EAAOhB,EAAAA,EAAAA,KAAH,iGAIM,qBAAEK,MAAkBC,OAAOW,gBAA3B,I,SC9CHC,EAAe,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBACvBC,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IACzBC,GAAeC,EAAAA,EAAAA,QAAO,MAkB5B,OACE,iBAAKC,MAAO,CAAEC,SAAU,UAAxB,WACE,SAACjB,EAAD,CAAYkB,IAAKJ,EAAjB,SACGH,EAAWQ,KAAI,SAACC,EAAMC,GACrB,OACE,SAACpB,EAAD,CAEEqB,UAAWF,EAAKG,KAAKC,gBAAkBd,EAAgBc,cAAgB,SAAW,KAClFC,QAAS,SAAAC,GAAK,OAxBL,SAACA,EAAOL,GAC3B,IAAMM,EAAYb,EAAac,QACzBC,EAAWF,EAAUG,SAAST,GAE9BU,EAAiBJ,EAAUK,YAC3BC,EAAgBJ,EAASG,YAEzBE,EACJL,EAASM,YAAcJ,EAAiBE,GAAiB,EAE3DN,EAAUS,SAAS,CACjBC,KAAMH,EACNI,SAAU,UAEb,CAU6BC,CAAab,EAAOL,EAAxB,EAHhB,UAKE,SAAC,KAAD,CAAMmB,GAAE,sBAAiBpB,EAAKG,MAA9B,SAAuCH,EAAKG,QAJvCH,EAAKqB,IAOf,OAEH,SAAClC,EAAD,MAGL,E,oBCZD,EAxBuB,WACrB,OAA8CmC,EAAAA,EAAAA,UAAS,QAAvD,eAAOhC,EAAP,KAAwBiC,EAAxB,KACQC,GAAiBC,EAAAA,EAAAA,MAAjBD,aACFE,GAAWC,EAAAA,EAAAA,MAYjB,OAVAC,EAAAA,EAAAA,YAAU,WACRL,EAAmBC,GACnBE,EAASG,EAAAA,EAAAA,qBAAsCL,GAChD,GAAE,CAACA,EAAcE,KAElBE,EAAAA,EAAAA,YAAU,WACVF,EAASG,EAAAA,EAAAA,kBACR,GAAE,CAACH,KAGG,UAACI,EAAA,EAAD,CAAelC,MAAO,CAAEmC,WAAY,QAApC,WACH,SAACC,EAAA,EAAD,CAAWrD,MAAO,gBACpB,SAACU,EAAD,CAAcC,gBAAiBA,KAC/B,SAAC,EAAA2C,SAAD,WACI,SAAC,KAAD,QAGP,C","sources":["components/ReusableComponents/PageTitle/PageTitle.styled.jsx","components/ReusableComponents/PageTitle/PageTitle.jsx","components/CategoryList/CategoryList.styled.jsx","components/CategoryList/CategoryList.jsx","pages/CategoriesPage/CategoriesPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Title = styled.h1`\n  color: var(--page-title-color);\n  font-size: 28px;\n  font-weight: 600;\n  line-height: 1;\n  letter-spacing: -0.56px;\n  padding-top: 35px;\n  padding-bottom: 3px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 32px;\n    letter-spacing: -0.64px;\n    padding-bottom: 6px;\n    padding-top: 46px;\n  }\n  @media screen and (min-width: 1280px) {\n    font-size: 44px;\n    letter-spacing: -0.88px;\n    padding-top: 44px;\n  }\n`;\n\nexport const RectangleFirst = styled.div`\n  position: absolute;\n  top: 0;\n  left: 104px;\n  width: 8px;\n  height: 8px;\n  transform: rotate(-25deg);\n  flex-shrink: 0;\n  border-radius: 3px;\n  background: var(--accent-color);\n\n  @media screen and (min-width: 768px) {\n    width: 14px;\n    height: 14px;\n  }\n`;\n\nexport const RectangleSecond = styled(RectangleFirst)`\n  top: 30px;\n  left: 333px;\n\n  @media screen and (min-width: 768px) {\n    top: 13px;\n    left: 694px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    left: 1150px;\n  }\n`;\n\nexport const Circle = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 241px;\n  width: 6px;\n  height: 6px;\n  transform: rotate(-25deg);\n  flex-shrink: 0;\n  border-radius: 3px;\n  background: var(--background-color-circle);\n\n  @media screen and (min-width: 768px) {\n    width: 12px;\n    height: 12px;\n    border-radius: 3px;\n\n    left: 405px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    left: 707px;\n  }\n`;\n\nexport const Section = styled.section`\n  position: relative;\n\n  background-color: ${({theme}) => theme.colors.backgroundColor}\n`;\n","import PropTypes from 'prop-types';\nimport {\n  Section,\n  Title,\n  RectangleFirst,\n  RectangleSecond,\n  Circle,\n} from './PageTitle.styled';\n\nconst PageTitle = ({ title }) => {\n  return (\n    <Section>\n      <Title>{title}</Title>\n      <RectangleFirst />\n      <RectangleSecond />\n      <Circle />\n    </Section>\n  );\n};\n\nPageTitle.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default PageTitle;\n","import styled from '@emotion/styled';\n\nconst Categories = styled.ul`\n  display: flex;\n  align-items: center;\n  padding-top: 100px;\n  /* width:100%; */\n  flex-wrap: nowrap;\n  overflow-x: scroll;\n  overflow-y: hidden;\n  scrollbar-width: none;\n  -ms-overflow-style: none;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`;\nconst Category = styled.li`\n  position: relative;\n  color:  ${({theme }) => theme.colors.categoryListItem};\n  font-size: 18px;\n  font-weight: 400;\n  line-height: 1;\n  padding-bottom: 27px;\n  text-transform: capitalize;\n  transition: color ${({theme }) => theme.transforms.transitionDuration} ${({theme }) => theme.transforms.timingFunction};\n\n  &:not(:last-child) {\n    margin-right: 55px;\n  }\n\n  &:hover,\n  &:focus {\n    color: ${({theme }) => theme.colors.accentColor};\n  }\n\n  &.active::after {\n    content: '';\n    position: absolute;\n    bottom: -1px;\n    left: 0;\n    display: block;\n    width: 100%;\n    height: 3px;\n    background: ${({theme }) => theme.colors.accentColor};\n  }\n`;\n\nconst Line = styled.span`\n  display: block;\n  width: 1240px;\n  height: 1px;\n  background: ${({theme }) => theme.colors.categoryListLine};\n`;\nexport { Categories, Category, Line };\n","import React, { useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport { selectCategoryList } from 'redux/recipes/recipesSelector';\nimport { Categories, Category, Line } from './CategoryList.styled';\nimport { useSelector } from 'react-redux';\n\nexport const CategoryList = ({ currentCategory }) => {\n  const categories = useSelector(selectCategoryList);\n  const containerRef = useRef(null);\n\n  const handleScroll = (event, index) => {\n    const container = containerRef.current;\n    const category = container.children[index];\n\n    const containerWidth = container.offsetWidth;\n    const categoryWidth = category.offsetWidth;\n\n    const scrollAmount =\n      category.offsetLeft - (containerWidth - categoryWidth) / 2;\n\n    container.scrollTo({\n      left: scrollAmount,\n      behavior: 'smooth',\n    });\n  };\n\n  return (\n    <div style={{ overflow: 'hidden' }}>\n      <Categories ref={containerRef}>\n        {categories.map((item, index) => {\n          return (\n            <Category\n              key={item._id}\n              className={item.name.toLowerCase() === currentCategory.toLowerCase() ? 'active' : null}\n              onClick={event => handleScroll(event, index)}\n            >\n              <Link to={`/categories/${item.name}`}>{item.name}</Link>\n            </Category>\n          );\n        })}\n      </Categories>\n      <Line />\n    </div>\n  );\n};\n","import { useDispatch } from \"react-redux\";\nimport { Suspense, useEffect, useState } from \"react\";\nimport { Outlet, useParams } from \"react-router\";\nimport { recipeOperations } from 'redux/recipes/operations';\nimport { CategoryList } from \"components/CategoryList/CategoryList\";\nimport PageTitle from \"components/ReusableComponents/PageTitle/PageTitle\";\nimport { MainContainer } from \"components/MainContainer/MainContainer\";\n\nconst CategoriesPage = () => {\n  const [currentCategory, setCurrentCategory] = useState('beef')\n  const { categoryName } = useParams();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setCurrentCategory(categoryName)\n    dispatch(recipeOperations.getRecipesByCategory(categoryName))\n  }, [categoryName, dispatch])\n\n  useEffect(() => {\n\t\tdispatch(recipeOperations.getCategoryList())\n  }, [dispatch])\n\n\n  return <MainContainer style={{ paddingTop: '58px' }}>\n      <PageTitle title={'Categories'}/>\n    <CategoryList currentCategory={currentCategory} />\n    <Suspense>\n        <Outlet />\n    </Suspense>\n    </MainContainer>\n}\n\nexport default CategoriesPage;"],"names":["Title","styled","RectangleFirst","RectangleSecond","Circle","Section","theme","colors","backgroundColor","title","Categories","Category","categoryListItem","transforms","transitionDuration","timingFunction","accentColor","Line","categoryListLine","CategoryList","currentCategory","categories","useSelector","selectCategoryList","containerRef","useRef","style","overflow","ref","map","item","index","className","name","toLowerCase","onClick","event","container","current","category","children","containerWidth","offsetWidth","categoryWidth","scrollAmount","offsetLeft","scrollTo","left","behavior","handleScroll","to","_id","useState","setCurrentCategory","categoryName","useParams","dispatch","useDispatch","useEffect","recipeOperations","MainContainer","paddingTop","PageTitle","Suspense"],"sourceRoot":""}