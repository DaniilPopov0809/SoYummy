{"version":3,"file":"static/js/684.02768793.chunk.js","mappings":"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","sources":["components/ReusableComponents/PageTitle/PageTitle.styled.jsx","components/ReusableComponents/PageTitle/PageTitle.jsx","components/ReusableComponents/SearchCap/SearchCap.styled.jsx","components/ReusableComponents/SearchCap/SearhCap.jsx","components/ReusableComponents/SearchForm/SearchForm.styled.jsx","components/ReusableComponents/SearchForm/SearchForm.jsx","components/SearchTypeSelector/SelectCustom.styled.jsx","components/SearchTypeSelector/SelectCustom.jsx","components/SearchTypeSelector/SearchTypeSelector.styled.jsx","components/SearchTypeSelector/SearchTypeSelector.jsx","components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","components/Paginator/PaginatorSearch.styled.jsx","components/Paginator/PaginatorSearch.jsx","components/SearchedRecipesList/SearchRecipesList.styled.jsx","components/SearchedRecipesList/SearchedRecipesList.jsx","pages/SearchPage.jsx","redux/search/searchSelector.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Title = styled.h1`\n  color: ${({ theme }) => theme.colors.pageTitleColor};\n  font-size: ${({ theme }) => theme.fontSizes[28]}px;\n  font-weight: ${({ theme }) => theme.fontWeights.semibold};\n  line-height: ${({ theme }) => theme.lineHeights['1']};\n  letter-spacing: -0.56px;\n  padding-bottom: 3px;\n\n  @media screen and (min-width: 768px) {\n    font-size: ${({ theme }) => theme.fontSizes[32]}px;\n    letter-spacing: -0.64px;\n    padding-bottom: 6px;\n  }\n  @media screen and (min-width: 1280px) {\n    font-size: ${({ theme }) => theme.fontSizes[44]}px;\n    letter-spacing: -0.88px;\n  }\n`;\n\nexport const RectangleFirst = styled.div`\n  position: absolute;\n  top: 76px;\n  left: 104px;\n  width: 8px;\n  height: 8px;\n  transform: rotate(-25deg);\n  flex-shrink: 0;\n  border-radius: 3px;\n  background: ${({ theme }) => theme.colors.accentColor};\n\n  @media screen and (min-width: 768px) {\n    left: 187px;\n    width: 14px;\n    height: 14px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    left: 247px;\n  }\n`;\n\nexport const RectangleSecond = styled(RectangleFirst)`\n  top: 106px;\n  left: 333px;\n\n  @media screen and (min-width: 768px) {\n    top: 89px;\n    left: 694px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    left: 1150px;\n  }\n`;\n\nexport const Circle = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 241px;\n  width: 6px;\n  height: 6px;\n  transform: rotate(-25deg);\n  flex-shrink: 0;\n  border-radius: 3px;\n  background: ${({ theme }) => theme.colors.pageTitleColor};\n\n  @media screen and (min-width: 768px) {\n    width: 12px;\n    height: 12px;\n    border-radius: 3px;\n\n    left: 405px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    left: 707px;\n  }\n`;\n\nexport const Section = styled.section`\n  position: relative;\n  padding-top: 114px;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 136px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding-top: 164px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport {\n  Section,\n  Title,\n  RectangleFirst,\n  RectangleSecond,\n  Circle,\n} from './PageTitle.styled';\n\nconst PageTitle = ({ title }) => {\n  return (\n    <Section>\n      <Title>{title}</Title>\n      <RectangleFirst />\n      <RectangleSecond />\n      <Circle />\n    </Section>\n  );\n};\n\nPageTitle.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default PageTitle;\n","import styled from '@emotion/styled';\n\nexport const ImageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: 0 auto;\n  max-width: 100%;\n`;\n\nexport const Text = styled.p`\n  margin-top: 24px;\n  color: #000000;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1;\n  letter-spacing: -0.28px;\n  opacity: 0.5;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 32px;\n    font-size: 24px;\n    letter-spacing: -0.48px;\n  }\n`;\n","import searchCapSmall from '../../../images/searchPageCap/searchCapSmall.png';\nimport searchCapSmall2x from '../../../images/searchPageCap/searchCapSmall@2x.png';\nimport searchCapLarge from '../../../images/searchPageCap/searchCapLarge.png';\nimport searchCapLarge2x from '../../../images/searchPageCap/searchCapLarge@2x.png';\n\nimport { ImageContainer, Text } from './SearchCap.styled';\n\nconst SearchCapImage = ({children}) => {\n    return (\n      <ImageContainer>\n        <picture>\n          <source\n            srcSet={`${searchCapLarge} 1x, ${searchCapLarge2x} 2x`}\n            media=\"(min-width: 768px)\"\n          />\n          <source\n            srcSet={`${searchCapSmall} 1x, ${searchCapSmall2x} 2x`}\n            media=\"(max-width: 767px)\"\n          />\n          <img src={searchCapSmall} alt=\"vegitable\" />\n        </picture>\n        <Text>{children}</Text>\n      </ImageContainer>\n    );\n};\n\nexport default SearchCapImage;\n\n\n","import styled from '@emotion/styled';\n\nexport const Input = styled.input`\n  box-sizing: border-box;\n  width: 295px;\n  padding: 16px 32px;\n  drop-shadow: 0px 4px 97px rgba(34, 37, 42, 0.03);\n  background-color: ${({ theme }) => theme.colors.inputSearchBGColor};\n  border-radius: 24px 44px;\n  border: ${({ theme }) => theme.borders.inputSearchBorder};\n  color: var(--primary-text-color);\n  font-size: 12px;\n  line-height: 1.2;\n\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus,\n  :active {\n    border: ${({ theme }) => theme.borders.inputSearchBorderHover};\n    outline: rgba(35, 38, 42, 0.2);\n  }\n\n  ::placeholder {\n    color: #bdbdbd;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 362px;\n    padding: 17px 38px;\n    font-size: 14px;\n    line-height: 1.2;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 510px;\n    padding: 23px 48px;\n    font-size: 16px;\n    line-height: 1.2;\n  }\n`;\nexport const InputWrapper = styled.div`\n  display: inline-block;\n  position: relative;\n`;\n\nexport const ButtonWrapper = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n`;\n","import { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useSearchParams, useNavigate, useLocation } from 'react-router-dom';\n\nimport MainButton from '../MainButton/MainButton';\nimport { showMessageToast } from '../ToastCustom/showToast';\n\nimport { Input, InputWrapper, ButtonWrapper } from './SearchForm.styled';\n\nimport { selectSearchFilter } from 'redux/search/searchSelector';\nimport getRecipesByTitle from 'redux/search/operations/getRecipesByTitle';\nimport getRecipesByIngredient from 'redux/search/operations/getRecipesByIngredient';\nimport {\n  resetRecipeByTitle,\n  resetRecipeByIngredient,\n} from 'redux/search/searchSlice';\n\nconst SearchForm = () => {\n  const [searchValue, setSearchValue] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const selectedOption = useSelector(selectSearchFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (location.state && location.state.from === '/main') {\n      const query = searchParams.get('q');\n      setSearchValue(query);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const updateQueryString = useCallback(() => {\n    if (location.pathname === '/search' && searchValue !== '') {\n      switch (selectedOption) {\n        case 'Title':\n          setSearchParams({ q: searchValue });\n          break;\n        case 'Ingredient':\n          setSearchParams({ ing: searchValue });\n          break;\n        default:\n          break;\n      }\n    }\n    if (searchValue === '') {\n      setSearchParams({});\n    }\n  }, [location.pathname, searchValue, selectedOption, setSearchParams]);\n\n  useEffect(() => {\n    updateQueryString();\n  }, [updateQueryString]);\n\n  const handleInputChange = e => {\n    const trimvalue = e.target.value.trim();\n    setSearchValue(trimvalue);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (location.pathname === '/main' && searchValue !== '') {\n      navigate(`/search?q=${searchValue}`, {\n        state: { from: '/main' },\n      });\n      return;\n    }\n\n    const params = Object.fromEntries(searchParams.entries());\n    const { q, ing } = params;\n\n    const title = searchParams.get('q');\n    const ingredient = searchParams.get('ing');\n\n    if (searchValue === '') {\n      setSearchParams({});\n      showMessageToast('enter any word in');\n      return;\n    }\n\n    if (q && q !== '') {\n      dispatch(resetRecipeByIngredient());\n      dispatch(getRecipesByTitle(title));\n    }\n    if (ing && ing !== '') {\n      dispatch(resetRecipeByTitle());\n      dispatch(getRecipesByIngredient(ingredient));\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <InputWrapper>\n          <Input\n            type=\"text\"\n            name=\"search\"\n            value={searchValue}\n            onChange={handleInputChange}\n            placeholder=\"Enter the text\"\n            autoComplete=\"off\"\n          />\n          <ButtonWrapper>\n            <MainButton\n              nameButton=\"Search\"\n              fontSize=\"14px\"\n              padding={{\n                paddingTop: '13.3px',\n                paddingBottom: '13.3px',\n                paddingLeft: '32px',\n                paddingRight: '32px',\n              }}\n              cofByMedia768={{\n                font: 1.2,\n                padX: 1.02,\n                padY: 1.63,\n              }}\n              cofByMedia1280={{\n                font: 1.2,\n                padX: 1.54,\n                padY: 1.63,\n              }}\n              bgColor={\n                location.pathname === '/'\n                  ? 'var(--background-color-circle)'\n                  : '#8BAA36'\n              }\n              hoverStyles={{ styleFirst: 'background-color' }}\n              hoverParams={{\n                paramFirst:\n                  location.pathname === '/'\n                    ? '#8BAA36'\n                    : 'var(--background-color-circle)',\n              }}\n            />\n          </ButtonWrapper>\n        </InputWrapper>\n      </form>\n    </div>\n  );\n};\n\nexport default SearchForm;\n","import styled from '@emotion/styled';\n\nexport const PositionWrapper = styled.div`\n  position: relative;\n`;\n\nexport const StyledFormControl = styled.div`\n  border: ${({ theme }) => theme.borders.inputSearchBorder};\n  color: ${({ theme }) => theme.colors.selectTextColor};\n  background-color: ${({ theme }) => theme.colors.selectBGColor};\n  position: relative;\n  width: 146px;\n  border-radius: 6px;\n  position: relative;\n  text-align: left;\n  padding: 10px 14px;\n  font-size: 12px;\n  font-weight: 500;\n  letter-spacing: -0.24px;\n  cursor: pointer;\n\n  :hover,\n  :focus,\n  :activ {\n    border: ${({ theme }) => theme.borders.inputSearchBorderHover};\n  }\n\n  svg {\n    width: 15px;\n    height: 15px;\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    fill: #8baa36;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n    width: 175px;\n\n    svg {\n      width: 18px;\n      height: 18px;\n    }\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 198px;\n  }\n`;\n\nexport const OptionWrapper = styled.div`\n  position: absolute;\n  top: 34px;\n  left: 0;\n  z-index: 5;\n`;\n\nexport const StyledSelect = styled.ul`\n  background-color: ${({ theme }) => theme.colors.inputSearchBGColor};\n  width: 146px;\n  padding: 4px 0;\n  font-size: 12px;\n  font-weight: 500;\n  letter-spacing: -0.24px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 4px;\n  border: ${({ theme }) => theme.borders.selectBorderHover};\n\n  color: ${({ theme }) => theme.colors.selectTextColor};\n  text-align: left;\n  border-radius: 0px 0px 6px 6px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n    width: 175px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 198px;\n  }\n`;\n\nexport const StyledMenuItem = styled.li`\n  background-color: ${({ theme }) => theme.colors.inputSearchBGColor};\n  width: 100%;\n  padding: 8px 14px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.dropDownColor};\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 175px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 198px;\n  }\n`;\n","import { useState } from 'react';\nimport { IoIosArrowDown } from 'react-icons/io';\n\nimport {\n  PositionWrapper,\n  StyledFormControl,\n  StyledSelect,\n  StyledMenuItem,\n  OptionWrapper,\n} from './SelectCustom.styled';\n\nconst SelectCustom = ({ options, onChange }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(options[0]);\n\n  const handleSelect = option => {\n    setSelectedOption(option);\n    setIsOpen(false);\n    if (onChange) {\n      onChange(option);\n    }\n  };\n\n  return (\n    <PositionWrapper>\n      <StyledFormControl onClick={() => setIsOpen(!isOpen)}>\n        {selectedOption}\n        <IoIosArrowDown />\n      </StyledFormControl>\n      {isOpen && (\n        <OptionWrapper>\n          <StyledSelect>\n            {options.map(option => (\n              <StyledMenuItem key={option} onClick={() => handleSelect(option)}>\n                {option}\n              </StyledMenuItem>\n            ))}\n          </StyledSelect>\n        </OptionWrapper>\n      )}\n    </PositionWrapper>\n  );\n};\n\nexport default SelectCustom;\n","import styled from '@emotion/styled';\n\nexport const SelectWrapper = styled.div`\n  margin-top: 24px;\n  display: flex;\n  justify-content: center;\n  gap: 15px;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 28px;\n    gap: 18px;\n  }\n`;\n\nexport const SelectName = styled.p`\n  align-self: top;\n  padding: 10px 0;\n  color: var(--page-title-color);\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 1.33;\n  letter-spacing: -0.24px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n    padding: 8px 0;\n  }\n\n  @media screen and (min-width: 1280px) {\n    font-size: 18px;\n    padding: 6px 0;\n  }\n`;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport SelectCustom from './SelectCustom';\nimport { SelectWrapper, SelectName } from './SearchTypeSelector.styled';\n\nconst SearchTypeSelector = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    return () => {\n      dispatch(selectOption('Title'));\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const selectOption = selectedOption => {\n    return {\n      type: 'search/setSearchFilter',\n      payload: selectedOption,\n    };\n  };\n\n  const handleOptionChange = value => {\n    dispatch(selectOption(value));\n  };\n\n  return (\n    <>\n      <SelectWrapper>\n        <SelectName> Search by:</SelectName>\n        <SelectCustom\n          options={['Title', 'Ingredient']}\n          onChange={handleOptionChange}\n        />\n      </SelectWrapper>\n    </>\n  );\n};\n\nexport default SearchTypeSelector;\n","import styled from '@emotion/styled';\n\nexport const Section = styled.section`\n  text-align: center;\n  padding-top: 50px;\n  padding-bottom: 22px;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 40px;\n    padding-bottom: 20px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding-top: 50px;\n    padding-bottom: 45px;\n  }\n`;\n","import SearchForm from 'components/ReusableComponents/SearchForm/SearchForm';\nimport SearchTypeSelector from 'components/SearchTypeSelector/SearchTypeSelector';\nimport { Section } from './SearchBar.styled';\n\nconst SearchBar = () => {\n  return (\n    <Section>\n      <SearchForm />\n      <SearchTypeSelector />\n    </Section>\n  );\n};\n\nexport default SearchBar;\n","import styled from '@emotion/styled';\n\nexport const PaginationStyled = styled.div`\n  display: inline-flex;\n  justify-content: center;\n  align-iems: center;\n  border-radius: 26px;\n  background: ${({ theme }) => theme.colors.paginatorBGColor};\n  box-shadow: 0px 4px 4px 0px rgba(135, 135, 135, 0.2);\n  padding: 12px 20px;\n\n  @madia and screen(min-width: 768px) {\n    padding: 14px 20px;\n  }\n`;\n\nexport const ArrowButton = styled.button`\n  width: 27px;\n  height: 27px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 5px 10px;\n  margin: 0 5px;\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n\nexport const Icon = styled.svg`\n  width: 8px;\n  height: 15px;\n  fill: rgba(169, 169, 169, 0.8);\n  \n  &:disabled {\n    fill: rgba(169, 169, 169, 0.3);\n    cursor: not-allowed;\n  }\n\n  &:hover {\n    fill: #656565;\n  }\n`;\n\nexport const NumberButton = styled.button`\n  width: 27px;\n  height: 27px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: none;\n  padding: 5px 10px;\n  margin: 0 5px;\n  font-size: 14px;\n  color: ${({ theme }) => theme.colors.recipeCardDescriptionColor};\n  cursor: pointer;\n  border-radius: 50%;\n  background-color: ${({ selected, theme }) =>\n    selected ? theme.colors.paginationBgHoverColor : 'transparent'};\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.paginationBgHoverColor};\n  }\n`;\n","import { useCallback } from 'react';\nimport {\n  PaginationStyled,\n  NumberButton,\n  Icon,\n  ArrowButton,\n} from './PaginatorSearch.styled';\nimport sprite from '../../images/sprite.svg';\n\nconst Paginator = ({ data, itemsPerPage, currentPage, onPageChange }) => {\n  const pageCount = Math.ceil(data.length / itemsPerPage);\n\n  const handlePageChange = useCallback(\n    pageNumber => {\n      if (pageNumber >= 1 && pageNumber <= pageCount) {\n        onPageChange(pageNumber);\n      }\n    },\n    [onPageChange, pageCount]\n  );\n\n  const renderPaginationItems = () => {\n    const paginationItems = [];\n\n    const visiblePagesCount = 10;\n    let startPage;\n    let endPage;\n\n    if (pageCount <= visiblePagesCount) {\n      startPage = 1;\n      endPage = pageCount;\n    } else {\n      const pagesBeforeAndAfter = Math.floor((visiblePagesCount - 2) / 2);\n      startPage = Math.max(currentPage - pagesBeforeAndAfter, 1);\n      endPage = startPage + visiblePagesCount - 3;\n\n      if (endPage > pageCount) {\n        endPage = pageCount;\n        startPage = endPage - visiblePagesCount + 3;\n      }\n    }\n\n    if (startPage > 2) {\n      paginationItems.push(\n        <NumberButton key=\"ellipsis-left\" disabled>\n          ...\n        </NumberButton>\n      );\n    }\n\n    for (let i = startPage; i < endPage; i++) {\n      paginationItems.push(\n        <NumberButton\n          key={i}\n          onClick={() => handlePageChange(i)}\n          selected={currentPage === i}\n        >\n          {i}\n        </NumberButton>\n      );\n    }\n\n    if (endPage < pageCount) {\n      paginationItems.push(\n        <NumberButton key=\"ellipsis-right\" disabled>\n          ...\n        </NumberButton>\n      );\n    }\n\n    paginationItems.push(\n      <NumberButton\n        key={pageCount}\n        onClick={() => handlePageChange(pageCount)}\n        selected={currentPage === pageCount}\n      >\n        {pageCount}\n      </NumberButton>\n    );\n\n    return paginationItems;\n  };\n\n  return (\n    <PaginationStyled>\n      <ArrowButton\n        onClick={() => handlePageChange(currentPage - 1)}\n        disabled={currentPage === 1}\n      >\n        <Icon disabled={currentPage === 1}>\n          <use href={`${sprite}#arrow-left`}></use>\n        </Icon>\n      </ArrowButton>\n      {renderPaginationItems()}\n      <ArrowButton\n        onClick={() => handlePageChange(currentPage + 1)}\n        disabled={currentPage === pageCount}\n      >\n        <Icon disabled={currentPage === pageCount}>\n          <use href={`${sprite}#arrow-right`}></use>\n        </Icon>\n      </ArrowButton>\n    </PaginationStyled>\n  );\n};\n\nexport default Paginator;\n","import styled from '@emotion/styled';\n\nexport const Section = styled.section`\n  text-align: center;\n  padding-top: 22px;\n  padding-bottom: 100px;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 20px;\n    padding-bottom: 200px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding-top: 45px;\n  }\n`;\n\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 28px;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 50px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    flex-wrap: wrap;\n    gap: 32px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    flex-direction: row;\n    flex-wrap: wrap;\n    row-gap: 100px;\n    column-gap: 14px;\n  }\n`;\n","import {\n  useEffect,\n  useLayoutEffect,\n  useState,\n  useCallback,\n  useRef,\n} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router';\nimport { useSearchParams } from 'react-router-dom';\n\nimport Loader from '../ReusableComponents/Loader/Loader';\nimport RecipeGalleryItem from '../ReusableComponents/RecipeGalleryItem/RecipeGalleryItem';\nimport SearchCapImage from '../ReusableComponents/SearchCap/SearhCap';\nimport { showErrorToast } from '../ReusableComponents/ToastCustom/showToast';\nimport Paginator from '../Paginator/PaginatorSearch';\n\nimport {\n  selectRecipeByTitle,\n  selectRecipesByIngredient,\n  selectIsLoading,\n  selectError,\n} from 'redux/search/searchSelector';\nimport getRecipesByTitle from 'redux/search/operations/getRecipesByTitle';\nimport { resetRecipeByIngredient } from 'redux/search/searchSlice';\n\nimport { Section, List } from './SearchRecipesList.styled';\n\nconst SearchedRecipesList = () => {\n  const searchedList = useSelector(selectRecipeByTitle);\n  const serchedIngredList = useSelector(selectRecipesByIngredient);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  const [visibleRecipes, setVisibleRecipes] = useState([]);\n\n  const [searchParams] = useSearchParams();\n  const location = useLocation();\n  const dispatch = useDispatch();\n\n  const listRef = useRef(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 6;\n\n  useEffect(() => {\n    if (error) showErrorToast(error);\n  }, [error]);\n\n  useEffect(() => {\n    if (location.state && location.state.from === '/main') {\n      const params = Object.fromEntries(searchParams.entries());\n      const { q } = params;\n      const title = searchParams.get('q');\n\n      if (q && q !== '') {\n        dispatch(resetRecipeByIngredient());\n        dispatch(getRecipesByTitle(title));\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useLayoutEffect(() => {\n    const handleResize = () => {\n      setWindowWidth(window.innerWidth);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  const visibleRecipeList = useCallback(() => {\n    let visibleList =\n      searchedList?.length > 0 ? searchedList : serchedIngredList?.map(i => i);\n    setVisibleRecipes(visibleList);\n  }, [searchedList, serchedIngredList]);\n\n  useEffect(() => {\n    visibleRecipeList();\n  }, [visibleRecipeList]);\n\n    const handlePageChange = useCallback(\n      pageNumber => {\n        setCurrentPage(pageNumber);\n        listRef.current?.scrollIntoView({ behavior: 'smooth' });\n      },\n      [setCurrentPage]\n    );\n\n  const currentPageData = visibleRecipes.slice(\n    (currentPage - 1) * itemsPerPage,\n    currentPage * itemsPerPage\n  );\n\n  return (\n    <Section>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <>\n          {(windowWidth >= 1280 ? visibleRecipes : currentPageData)?.length ||\n          0 ? (\n            <List ref={listRef}>\n              {(windowWidth >= 1280 ? visibleRecipes : currentPageData)\n                .slice(\n                  0,\n                  windowWidth >= 1280\n                    ? 12\n                    : (windowWidth >= 1280 ? visibleRecipes : currentPageData)\n                        .length\n                )\n                .map(({ _id: id, title, preview }) => (\n                  <RecipeGalleryItem\n                    key={id}\n                    id={id}\n                    title={title}\n                    src={preview}\n                  />\n                ))}\n            </List>\n          ) : (\n            <SearchCapImage>Try looking for something else...</SearchCapImage>\n          )}\n          {(windowWidth < 1280 && visibleRecipes.length !== 0) && (\n            <Paginator\n              data={visibleRecipes}\n              itemsPerPage={itemsPerPage}\n              currentPage={currentPage}\n              onPageChange={handlePageChange}\n            />\n          )}\n        </>\n      )}\n    </Section>\n  );\n}\n\nexport default SearchedRecipesList;\n","import { MainContainer } from 'components/MainContainer/MainContainer';\nimport TitlePage from 'components/ReusableComponents/PageTitle/PageTitle';\nimport SearchBar from 'components/SearchBar/SearchBar';\nimport SearchedRecipesList from 'components/SearchedRecipesList/SearchedRecipesList';\n\nconst SearchPage = title => {\n  return (\n    <MainContainer>\n      <TitlePage title=\"Search\"></TitlePage>\n      <SearchBar />\n      <SearchedRecipesList />\n    </MainContainer>\n  );\n};\n\nexport default SearchPage;\n","export const selectRecipeByTitle = state => state.search.recipeByTitle;\nexport const selectRecipesByIngredient = state =>\n  state.search.recipesByIngredient;\nexport const selectSearchFilter = state => state.search.searchFilter;\nexport const selectIsLoading = state => state.search.isLoading;\nexport const selectError = state => state.search.error;\n"],"names":["Title","styled","theme","colors","pageTitleColor","fontSizes","fontWeights","semibold","lineHeights","RectangleFirst","accentColor","RectangleSecond","Circle","Section","title","ImageContainer","Text","children","srcSet","searchCapLarge","searchCapLarge2x","media","searchCapSmall","searchCapSmall2x","src","alt","Input","inputSearchBGColor","borders","inputSearchBorder","inputSearchBorderHover","InputWrapper","ButtonWrapper","useState","searchValue","setSearchValue","useSearchParams","searchParams","setSearchParams","navigate","useNavigate","location","useLocation","selectedOption","useSelector","selectSearchFilter","dispatch","useDispatch","useEffect","state","from","query","get","updateQueryString","useCallback","pathname","q","ing","onSubmit","e","preventDefault","params","Object","fromEntries","entries","ingredient","showMessageToast","resetRecipeByIngredient","getRecipesByTitle","resetRecipeByTitle","getRecipesByIngredient","type","name","value","onChange","trimvalue","target","trim","placeholder","autoComplete","MainButton","nameButton","fontSize","padding","paddingTop","paddingBottom","paddingLeft","paddingRight","cofByMedia768","font","padX","padY","cofByMedia1280","bgColor","hoverStyles","styleFirst","hoverParams","paramFirst","PositionWrapper","StyledFormControl","selectTextColor","selectBGColor","OptionWrapper","StyledSelect","selectBorderHover","StyledMenuItem","dropDownColor","options","isOpen","setIsOpen","setSelectedOption","onClick","map","option","handleSelect","SelectWrapper","SelectName","selectOption","payload","SearchForm","PaginationStyled","paginatorBGColor","ArrowButton","Icon","NumberButton","recipeCardDescriptionColor","selected","paginationBgHoverColor","data","itemsPerPage","currentPage","onPageChange","pageCount","Math","ceil","length","handlePageChange","pageNumber","disabled","href","sprite","startPage","endPage","paginationItems","pagesBeforeAndAfter","floor","max","push","i","renderPaginationItems","List","searchedList","selectRecipeByTitle","serchedIngredList","selectRecipesByIngredient","isLoading","selectIsLoading","error","selectError","window","innerWidth","windowWidth","setWindowWidth","visibleRecipes","setVisibleRecipes","listRef","useRef","setCurrentPage","showErrorToast","useLayoutEffect","handleResize","addEventListener","removeEventListener","visibleRecipeList","visibleList","current","scrollIntoView","behavior","currentPageData","slice","Loader","ref","id","_id","preview","RecipeGalleryItem","MainContainer","search","recipeByTitle","recipesByIngredient","searchFilter"],"sourceRoot":""}