{"version":3,"file":"static/js/786.e959a6da.chunk.js","mappings":"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","sources":["components/ReusableComponents/PageTitle/PageTitle.styled.jsx","components/ReusableComponents/PageTitle/PageTitle.jsx","components/ReusableComponents/SearchCap/SearchCap.styled.jsx","components/ReusableComponents/SearchCap/SearhCap.jsx","components/ReusableComponents/SearchForm/SearchForm.styled.jsx","components/ReusableComponents/SearchForm/SearchForm.jsx","components/SearchTypeSelector/SearchTypeSelector.styled.jsx","components/SearchTypeSelector/SearchTypeSelector.jsx","components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","hooks/usePagination.js","components/ReusableComponents/Paginator/Paginator.styled.jsx","components/ReusableComponents/Paginator/Paginator.jsx","components/SearchedRecipesList/SearchRecipesList.styled.jsx","components/SearchedRecipesList/SearchedRecipesList.jsx","pages/SearchPage.jsx","redux/search/searchSelector.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Title = styled.h1`\n  color: var(--page-title-color);\n  font-size: 28px;\n  font-weight: 600;\n  line-height: 1;\n  letter-spacing: -0.56px;\n  padding-top: 35px;\n  padding-bottom: 3px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 32px;\n    letter-spacing: -0.64px;\n    padding-bottom: 6px;\n    padding-top: 46px;\n  }\n  @media screen and (min-width: 1280px) {\n    font-size: 44px;\n    letter-spacing: -0.88px;\n    padding-top: 44px;\n  }\n`;\n\nexport const RectangleFirst = styled.div`\n  position: absolute;\n  top: 0;\n  left: 104px;\n  width: 8px;\n  height: 8px;\n  transform: rotate(-25deg);\n  flex-shrink: 0;\n  border-radius: 3px;\n  background: var(--accent-color);\n\n  @media screen and (min-width: 768px) {\n    width: 14px;\n    height: 14px;\n  }\n`;\n\nexport const RectangleSecond = styled(RectangleFirst)`\n  top: 30px;\n  left: 333px;\n\n  @media screen and (min-width: 768px) {\n    top: 13px;\n    left: 694px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    left: 1150px;\n  }\n`;\n\nexport const Circle = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 241px;\n  width: 6px;\n  height: 6px;\n  transform: rotate(-25deg);\n  flex-shrink: 0;\n  border-radius: 3px;\n  background: var(--background-color-circle);\n\n  @media screen and (min-width: 768px) {\n    width: 12px;\n    height: 12px;\n    border-radius: 3px;\n\n    left: 405px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    left: 707px;\n  }\n`;\n\nexport const Section = styled.section`\n  position: relative;\n\n  background-color: ${({theme}) => theme.colors.backgroundColor}\n`;\n","import PropTypes from 'prop-types';\nimport {\n  Section,\n  Title,\n  RectangleFirst,\n  RectangleSecond,\n  Circle,\n} from './PageTitle.styled';\n\nconst PageTitle = ({ title }) => {\n  return (\n    <Section>\n      <Title>{title}</Title>\n      <RectangleFirst />\n      <RectangleSecond />\n      <Circle />\n    </Section>\n  );\n};\n\nPageTitle.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default PageTitle;\n","import styled from '@emotion/styled';\n\nexport const ImageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: 0 auto;\n  max-width: 100%;\n`;\n\nexport const Text = styled.p`\n  margin-top: 24px;\n  color: #000000;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1;\n  letter-spacing: -0.28px;\n  opacity: 0.5;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 32px;\n    font-size: 24px;\n    letter-spacing: -0.48px;\n  }\n`;\n","import searchCapSmall from '../../../images/searchPageCap/searchCapSmall.png';\nimport searchCapSmall2x from '../../../images/searchPageCap/searchCapSmall@2x.png';\nimport searchCapLarge from '../../../images/searchPageCap/searchCapLarge.png';\nimport searchCapLarge2x from '../../../images/searchPageCap/searchCapLarge@2x.png';\n\nimport { ImageContainer, Text } from './SearchCap.styled';\n\nconst SearchCapImage = ({children}) => {\n    return (\n      <ImageContainer>\n        <picture>\n          <source\n            srcSet={`${searchCapLarge} 1x, ${searchCapLarge2x} 2x`}\n            media=\"(min-width: 768px)\"\n          />\n          <source\n            srcSet={`${searchCapSmall} 1x, ${searchCapSmall2x} 2x`}\n            media=\"(max-width: 767px)\"\n          />\n          <img src={searchCapSmall} alt=\"vegitable\" />\n        </picture>\n        <Text>{children}</Text>\n      </ImageContainer>\n    );\n};\n\nexport default SearchCapImage;\n\n\n","import styled from '@emotion/styled';\n\nexport const Input = styled.input`\n  box-sizing: border-box;\n  width: 295px;\n  padding: 16px 32px;\n  drop-shadow: 0px 4px 97px rgba(34, 37, 42, 0.03);\n  background-color: #ffffff;\n  border-radius: 24px 44px;\n  border: 1px solid #f0f0f0;\n  color: var(--primary-text-color);\n  font-size: 12px;\n  line-height: 1.2;\n\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus,\n  :active {\n    border: 1px solid rgba(35, 38, 42, 0.2);\n    outline: rgba(35, 38, 42, 0.2);\n  }\n\n  ::placeholder {\n    color: #bdbdbd;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 362px;\n    padding: 17px 38px;\n    font-size: 14px;\n    line-height: 1.2;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 510px;\n    padding: 23px 48px;\n    font-size: 16px;\n    line-height: 1.2;\n  }\n`;\nexport const InputWrapper = styled.div`\n  display: inline-block;\n  position: relative;\n`;\n\nexport const ButtonWrapper = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n`;\n","import { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useSearchParams, useNavigate, useLocation } from 'react-router-dom';\n\nimport MainButton from '../MainButton/MainButton';\nimport { showMessageToast } from '../ToastCustom/showToast';\n\nimport { Input, InputWrapper, ButtonWrapper } from './SearchForm.styled';\n\nimport { selectSearchFilter } from 'redux/search/searchSelector';\nimport getRecipesByTitle from 'redux/search/operations/getRecipesByTitle';\nimport getRecipesByIngredient from 'redux/search/operations/getRecipesByIngredient';\nimport { resetRecipeByTitle, resetRecipeByIngredient } from 'redux/search/searchSlice';\n\nconst SearchForm = () => {\n  const [searchValue, setSearchValue] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const selectedOption = useSelector(selectSearchFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (location.state && location.state.from === '/main') {\n      const query = searchParams.get('q');\n      setSearchValue(query);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const updateQueryString = useCallback(() => {\n    if (location.pathname === '/search' && searchValue !== '') {\n      switch (selectedOption) {\n        case 'title':\n          setSearchParams({ q: searchValue });\n          break;\n        case 'ingredient':\n          setSearchParams({ ing: searchValue });\n          break;\n        default:\n          break;\n      }\n    }\n    if (searchValue === '') {\n      setSearchParams({});\n    }\n  }, [location.pathname, searchValue, selectedOption, setSearchParams]);\n\n  useEffect(() => {\n    updateQueryString();\n  }, [updateQueryString]);\n\n  const handleInputChange = e => {\n    const trimmedValue = e.target.value.trim();\n    setSearchValue(trimmedValue);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const params = Object.fromEntries(searchParams.entries());\n    const { q, ing } = params;\n\n    const title = searchParams.get('q');\n    const ingredient = searchParams.get('ing');\n\n    if (searchValue === '') {\n      setSearchParams({});\n      showMessageToast('enter any word in');\n      return;\n    }\n\n    if (location.pathname === '/main' && searchValue !== '') {\n      navigate(`/search?q=${searchValue}`, {\n        state: { from: '/main' },\n      });\n    }\n\n    if (q && q !== '') {\n      dispatch(resetRecipeByIngredient());\n       dispatch(getRecipesByTitle(title));\n    }\n    if (ing && ing !== '') {\n      dispatch(resetRecipeByTitle());\n      dispatch(getRecipesByIngredient(ingredient));\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <InputWrapper>\n          <Input\n            type=\"text\"\n            name=\"search\"\n            value={searchValue}\n            onChange={handleInputChange}\n            placeholder=\"Enter the text\"\n            autoComplete=\"off\"\n          />\n          <ButtonWrapper>\n            <MainButton\n              nameButton=\"Search\"\n              fontSize=\"14px\"\n              padding={{\n                paddingTop: '13px',\n                paddingBottom: '13px',\n                paddingLeft: '32px',\n                paddingRight: '32px',\n              }}\n              cofByMedia768={{\n                font: 1.2,\n                padX: 1.02,\n                padY: 1.63,\n              }}\n              cofByMedia1280={{\n                font: 1.2,\n                padX: 1.52,\n                padY: 1.63,\n              }}\n              bgColor={\n                location.pathname === '/'\n                  ? 'var(--background-color-circle)'\n                  : '#8BAA36'\n              }\n              hoverStyles={{ styleFirst: 'background-color' }}\n              hoverParams={{\n                paramFirst:\n                  location.pathname === '/'\n                    ? '#8BAA36'\n                    : 'var(--background-color-circle)',\n              }}\n            />\n          </ButtonWrapper>\n        </InputWrapper>\n      </form>\n    </div>\n  );\n};\n\nexport default SearchForm;\n","import styled from '@emotion/styled';\nimport { FormControl, Select, MenuItem } from '@mui/material';\n\nexport const StyledFormControl = styled(FormControl)`\n  width: 146px;\n  borderradius: '6px';\n\n  @media screen and (min-width: 768px) {\n    width: 175px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 198px;\n  }\n`;\n\nexport const SelectWrapper = styled.div`\n  margin-top: 24px;\n  display: flex;\n  justify-content: center;\n  gap: 15px;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 28px;\n    gap: 18px;\n  }\n`;\n\nexport const SelectName = styled.p`\n  align-self: center;\n  color: var(--page-title-color);\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 1.33;\n  letter-spacing: -0.24px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    font-size: 18px;\n  }\n`;\n\nexport const StyledSelect = styled(Select)`\n  background-color: #d9d9d9;\n  opacity: 0.5;\n  text-align: left;\n  font-size: 12px;\n  letter-spacing: -0.24px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n`;\n\nexport const StyledMenuItem = styled(MenuItem)`\n  font-size: 12px;\n  letter-spacing: 0.8;\n  opacity: 0.5;\n\n  &&.Mui-selected {\n    background-color: transparent;\n    &:hover {\n      background-color: #d9d9d9;\n      opacity: 0.5;\n    }\n  }\n  &:hover {\n    background-color: #d9d9d9;\n    opacity: 0.5;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport KeyboardArrowDown from '@mui/icons-material/KeyboardArrowDown';\n\nimport { selectSearchFilter } from 'redux/search/searchSelector';\n\nimport {\n  StyledFormControl,\n  SelectWrapper,\n  SelectName,\n  StyledSelect,\n  StyledMenuItem,\n} from './SearchTypeSelector.styled';\n\nconst SearchTypeSelector = () => {\n  const dispatch = useDispatch();\n  const selectedOption = useSelector(selectSearchFilter);\n  const [selectedValue, setSelectedValue] = useState(selectedOption || 'title');\n\n  useEffect(() => {\n    if (selectedOption !== null) return;\n    if (selectedOption === null) {\n      dispatch(selectOption(selectedValue));\n    }\n  }, [dispatch, selectedOption, selectedValue]);\n\n  const selectOption = selectedOption => ({\n    type: 'search/setSearchFilter',\n    payload: selectedOption,\n  });\n\n  const handleChange = e => {\n    const value = e.target.value;\n    setSelectedValue(value);\n    dispatch(selectOption(value));\n  };\n\n  return (\n    <>\n      <SelectWrapper>\n        <SelectName> Search by:</SelectName>\n        <StyledFormControl\n          sx={{\n            m: 1,\n            minWidth: 120,\n            '& .MuiOutlinedInput-notchedOutline': {\n              border: 'none',\n            },\n          }}\n          size=\"small\"\n          margin=\"normal\"\n          focused={false}\n        >\n          <StyledSelect\n            value={selectedValue}\n            name=\"select\"\n            onChange={handleChange}\n            IconComponent={props => (\n              <KeyboardArrowDown sx={{ fill: '#8BAA36' }} {...props} />\n            )}\n          >\n            <StyledMenuItem value=\"title\">Title</StyledMenuItem>\n            <StyledMenuItem value=\"ingredient\">Ingredients</StyledMenuItem>\n          </StyledSelect>\n        </StyledFormControl>\n      </SelectWrapper>\n    </>\n  );\n};\n\nexport default SearchTypeSelector;\n","import styled from '@emotion/styled';\n\nexport const Section = styled.section`\n  text-align: center;\n  padding-top: 50px;\n  padding-bottom: 22px;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 40px;\n    padding-bottom: 20px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding-top: 50px;\n    padding-bottom: 45px;\n  }\n`;\n","import SearchForm from 'components/ReusableComponents/SearchForm/SearchForm';\nimport SearchTypeSelector from 'components/SearchTypeSelector/SearchTypeSelector';\n\nimport { Section } from './SearchBar.styled';\n\nconst SearchBar = () => {\n  return (\n    <Section>\n      <SearchForm />\n      <SearchTypeSelector/>\n    </Section>\n  );\n};\n\nexport default SearchBar;\n","import { useState, useEffect } from 'react';\n\nfunction usePagination(data, itemsPerPage) {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [visibleData, setVisibleData] = useState([]);\n\n  const count = Math.ceil(data.length / itemsPerPage);\n\n  useEffect(() => {\n    const begin = (currentPage - 1) * itemsPerPage;\n    const end = begin + itemsPerPage;\n    setVisibleData(data.slice(begin, end));\n  }, [data, currentPage, itemsPerPage]);\n\n  function next() {\n    setCurrentPage(currentPage => Math.min(currentPage + 1, count));\n  }\n\n  function prev() {\n    setCurrentPage(currentPage => Math.max(currentPage - 1, count));\n  }\n\n  function jump(page) {\n    const pageNumber = Math.max(1, page);\n    setCurrentPage(currentPage => Math.min(pageNumber, count));\n  }\n\n  return { next, prev, jump, currentData: visibleData, count };\n}\n\nexport default usePagination;\n","import styled from '@emotion/styled';\nimport Pagination from '@mui/material/Pagination';\n\nexport const StyledPaginator = styled(Pagination)`\n  display: flex;\n  justify-content: center;\n  & ul {\n    justify-content: center;\n    border-radius: 26px;\n    box-shadow: 0px 4px 4px 0px rgba(135, 135, 135, 0.2);\n    padding: 10px 8px;\n  }\n  & button {\n    color: #656565;\n    font-weight: 500;\n    &:focus {\n      background-color: transparent;\n    }\n    &:hover {\n      background-color: #ebf3d4;\n    }\n\n    &.Mui-selected {\n      color: black;\n      background-color: #ebf3d4;\n\n      &:hover,\n      &:focus,\n      &:active {\n        background-color: #ebf3d4;\n      }\n    }\n  }\n\n  & .MuiTouchRipple-root {\n    display: none;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { StyledPaginator } from './Paginator.styled';\n\nconst Paginator = ({ count, page, handleChange }) => {\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n  useEffect(() => {\n    const handleWindowResize = () => {\n      setWindowWidth(window.innerWidth);\n    };\n\n    window.addEventListener('resize', handleWindowResize);\n\n    return () => {\n      window.removeEventListener('resize', handleWindowResize);\n    };\n  }, []);\n  return (\n    <StyledPaginator\n      count={count}\n      color=\"primary\"\n      size=\"small\"\n      siblingCount={windowWidth > 768 ? 2 : 1}\n      page={page}\n      onChange={handleChange}\n    />\n  );\n};\n\nexport default Paginator;\n","import styled from '@emotion/styled';\n\nexport const Section = styled.section`\n  text-align: center;\n  padding-top: 22px;\n  padding-bottom: 100px;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 20px;\n    padding-bottom: 200px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding-top: 45px;\n  }\n`;\n\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 28px;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 50px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    flex-wrap: wrap;\n    gap: 32px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    flex-direction: row;\n    flex-wrap: wrap;\n    row-gap: 100px;\n    column-gap: 14px;\n  }\n`;\n","import {\n  useEffect,\n  useLayoutEffect,\n  useState,\n  useCallback,\n  useRef,\n} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router';\nimport { useSearchParams } from 'react-router-dom';\nimport usePagination from 'hooks/usePagination';\n\nimport Loader from '../ReusableComponents/Loader/Loader';\nimport RecipeGalleryItem from '../ReusableComponents/RecipeGalleryItem/RecipeGalleryItem';\nimport SearchCapImage from '../ReusableComponents/SearchCap/SearhCap';\nimport {\n  showErrorToast,\n} from '../ReusableComponents/ToastCustom/showToast';\nimport Paginator from '../ReusableComponents/Paginator/Paginator';\n\nimport {\n  selectRecipeByTitle,\n  selectRecipesByIngredient,\n  selectIsLoading,\n  selectError,\n} from 'redux/search/searchSelector';\nimport getRecipesByTitle from 'redux/search/operations/getRecipesByTitle';\nimport getRecipesByIngredient from 'redux/search/operations/getRecipesByIngredient';\nimport {\n  resetRecipeByTitle,\n  resetRecipeByIngredient,\n} from 'redux/search/searchSlice';\n\nimport { Section, List } from './SearchRecipesList.styled';\n\nconst SearchedRecipesList = () => {\n  const searchedList = useSelector(selectRecipeByTitle);\n  const serchedIngredList = useSelector(selectRecipesByIngredient);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  const [visibleRecipes, setVisibleRecipes] = useState([]);\n\n  const [searchParams] = useSearchParams();\n  const location = useLocation();\n  const dispatch = useDispatch();\n\n  const listRef = useRef(null);\n  const PER_PAGE = 6;\n  const data = usePagination(visibleRecipes, PER_PAGE);\n\n  const handleChange = (e, p) => {\n    data.jump(p);\n    listRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    if (error) showErrorToast(error);\n  }, [error]);\n\n  useEffect(() => {\n    if (location.state && location.state.from === '/main') {\n      const params = Object.fromEntries(searchParams.entries());\n      const { q, ing } = params;\n      const title = searchParams.get('q');\n      const ingredient = searchParams.get('ing');\n\n      if (q && q !== '') {\n        dispatch(resetRecipeByIngredient());\n        dispatch(getRecipesByTitle(title));\n      }\n      if (ing && ing !== '') {\n        dispatch(resetRecipeByTitle());\n        dispatch(getRecipesByIngredient(ingredient));\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useLayoutEffect(() => {\n    const handleResize = () => {\n      setWindowWidth(window.innerWidth);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  const visibleRecipeList = useCallback(() => {\n    let visibleList =\n      searchedList?.length > 0 ? searchedList : serchedIngredList?.map(i => i);\n    setVisibleRecipes(visibleList);\n  }, [searchedList, serchedIngredList]);\n\n  useEffect(() => {\n    visibleRecipeList();\n  }, [visibleRecipeList]);\n\n  return (\n    <Section>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <>\n          {(windowWidth >= 1280 ? visibleRecipes : data.currentData)?.length ||\n          0 ? (\n            <List ref={listRef}>\n              {(windowWidth >= 1280 ? visibleRecipes : data.currentData)\n                .slice(\n                  0,\n                  windowWidth >= 1280\n                    ? 12\n                    : (windowWidth >= 1280 ? visibleRecipes : data.currentData)\n                        .length\n                )\n                .map(({ _id: id, title, preview }) => (\n                  <RecipeGalleryItem\n                    key={id}\n                    id={id}\n                    title={title}\n                    src={preview}\n                  />\n                ))}\n            </List>\n          ) : (\n            <SearchCapImage>Try looking for something else...</SearchCapImage>\n          )}\n          {windowWidth < 1280 && (\n            <Paginator count={data.count} handleChange={handleChange} />\n          )}\n        </>\n      )}\n    </Section>\n  );\n}\n\nexport default SearchedRecipesList;\n","import { MainContainer } from 'components/MainContainer/MainContainer';\nimport TitlePage from 'components/ReusableComponents/PageTitle/PageTitle';\nimport SearchBar from 'components/SearchBar/SearchBar';\nimport SearchedRecipesList from 'components/SearchedRecipesList/SearchedRecipesList';\n\nconst SearchPage = title => {\n  return (\n    <MainContainer>\n      <TitlePage title=\"Search\"></TitlePage>\n      <SearchBar />\n      <SearchedRecipesList />\n    </MainContainer>\n  );\n};\n\nexport default SearchPage;\n","export const selectRecipeByTitle = state => state.search.recipeByTitle;\nexport const selectRecipesByIngredient = state =>\n  state.search.recipesByIngredient;\nexport const selectSearchFilter = state => state.search.searchFilter;\nexport const selectIsLoading = state => state.search.isLoading;\nexport const selectError = state => state.search.error;\n"],"names":["Title","styled","RectangleFirst","RectangleSecond","Circle","Section","theme","colors","backgroundColor","title","ImageContainer","Text","children","srcSet","searchCapLarge","searchCapLarge2x","media","searchCapSmall","searchCapSmall2x","src","alt","Input","InputWrapper","ButtonWrapper","useState","searchValue","setSearchValue","useSearchParams","searchParams","setSearchParams","navigate","useNavigate","location","useLocation","selectedOption","useSelector","selectSearchFilter","dispatch","useDispatch","useEffect","state","from","query","get","updateQueryString","useCallback","pathname","q","ing","onSubmit","e","preventDefault","params","Object","fromEntries","entries","ingredient","showMessageToast","resetRecipeByIngredient","getRecipesByTitle","resetRecipeByTitle","getRecipesByIngredient","type","name","value","onChange","trimmedValue","target","trim","placeholder","autoComplete","MainButton","nameButton","fontSize","padding","paddingTop","paddingBottom","paddingLeft","paddingRight","cofByMedia768","font","padX","padY","cofByMedia1280","bgColor","hoverStyles","styleFirst","hoverParams","paramFirst","StyledFormControl","FormControl","SelectWrapper","SelectName","StyledSelect","Select","StyledMenuItem","MenuItem","selectedValue","setSelectedValue","selectOption","payload","sx","m","minWidth","border","size","margin","focused","IconComponent","props","KeyboardArrowDown","fill","SearchForm","data","itemsPerPage","currentPage","setCurrentPage","visibleData","setVisibleData","count","Math","ceil","length","begin","end","slice","next","min","prev","max","jump","page","pageNumber","currentData","StyledPaginator","Pagination","handleChange","window","innerWidth","windowWidth","setWindowWidth","handleWindowResize","addEventListener","removeEventListener","color","siblingCount","List","searchedList","selectRecipeByTitle","serchedIngredList","selectRecipesByIngredient","isLoading","selectIsLoading","error","selectError","visibleRecipes","setVisibleRecipes","listRef","useRef","usePagination","showErrorToast","useLayoutEffect","handleResize","visibleRecipeList","visibleList","map","i","Loader","ref","id","_id","preview","RecipeGalleryItem","p","current","scrollIntoView","behavior","MainContainer","search","recipeByTitle","recipesByIngredient","searchFilter"],"sourceRoot":""}